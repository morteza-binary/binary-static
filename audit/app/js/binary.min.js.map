{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/App/Middlewares/is_client_allowed_to_visit.js","webpack:///./src/javascript/app_2/Modules/Portfolio/index.js","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/time_picker.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/toggle_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/Services/Helpers/switch_account.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/subscription_manager.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/outdated_browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/currency.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer_card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker_input.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_panel.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/start_date.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close_button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast_message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_quick_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_portfolio.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/upgrade_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install_pwa_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar_div.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Containers/Layout/theme_wrapper.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register_service_worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_logout","forEach","BinarySocketGeneral","WS","_icon_arrow","_icon_back","_icon_close","_icon_exclamation","Button","_ref$className","className","has_effect","id","is_disabled","onClick","text","wrapperClassName","classes","button","_react2","default","disabled","wrapper","string","bool","func","_mobx","_utility","BaseStore","options","_initDefineProp","_descriptor","_descriptor2","root_store","local_storage_properties","session_storage_properties","validation_rules","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","freeze","observable","action","_date_time","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","_icon_bell","_icon_cashier","_icon_hamburger","_icon_portfolio","_icon_statement","_icon_trade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","isProduction","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_localize","_Services","_barrier","_duration","_start_date","_contract","ContractType","available_contract_types","available_categories","contract_types","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","_time$split","split","_time$split2","_slicedToArray","moment","utc","isNaN","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","symbol","contractsFor","then","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getExpiryDate","expiry_date","moment_start","moment_expiry","isBefore","isAfter","clone","add","getExpiryTime","start_time","expiry_time","_moment2","end_moment","end_time","isSameOrBefore","is_end_of_day","is_end_of_session","getSessions","option","getStartTime","getContractCategories","contract_types_list","Fieldset","header","icon","onMouseEnter","onMouseLeave","tooltip","field_left_class","_classnames2","_tooltip2","alignment","message","array","apps","exclusion","financial","history","index","personal","portfolio","root","token","trade","Tooltip","icon_name","icon_class","data-tooltip","data-tooltip-pos","node","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","duration","unit","max","duration_maps","u","sort","b","from_unit","to_unit","duration_string","match","getExpiryType","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","floor","day","CalendarPanelTypes","calendar_date","calendar_view","date_format","isPeriodDisabled","max_date","min_date","selected_date","_drawer_header","_drawer_item","_drawer_items","_drawer","_drawer_toggle","_toggle_drawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","some","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","date_expiry","date_start","payout","theme","is_dark_mode_on","portfolio_drawer","is_portfolio_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","granularity","pushDataLayer","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","viewBox","fill","fillRule","color","getContractTypeDisplay","ASIANU","ASIAND","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","getChartConfig","contract_info","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","_icon_trade_types","UILoader","loading_class","cx","cy","strokeWidth","strokeMiterlimit","InputField","error_messages","fractional_digits","helper","is_float","_ref$is_signed","is_signed","label","max_length","onChange","placeholder","prefix","required","has_error","has_valid_length","input","data-for","data-tip","maxLength","is_empty","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","htmlFor","MobxPropTypes","arrayOrObservableArray","_fill_template","Localize","str","replacers","localized","fillTemplate","_icon_maximize","_icon_quick_portfolio","_icon_settings","_helpers","BinaryLink","RouteWithSubRoutes","_connect","_Date","RemainingTime","_ref$end_time","unix","remaining_time","formatDuration","getDiffDuration","isRequired","_ref2","_ui","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","spot","digit","is_win","isWin","is_last","win_checker","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","open","close","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","allowed_query_string_variables","non_proposal_query_string_variable","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","isClientAllowedToVisit","isLoggedIn","PortfolioLazy","lazy","EmptyPortfolioMessageLazy","IconClose","_reactRouterDom","to","_objectWithoutProperties","_routes_config2","NavLink","activeClassName","exact","_Constants","_Portfolio","_NavBar","ContractDetails","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","component","Redirect","Portfolio","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contract_type_widget2","_icon_trade_categories","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","_PopConfirm","_is_client_allowed_to_visit","Purchase","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","idx","info","purchase_button","_button2","stake","is_purchase_error","echo_req","_fieldset2","_PurchaseLock2","_MessageBox2","_ui_loader2","_contract_info2","contract_title","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","renderCards","_ref3","CalendarButton","is_hidden","TimePickerDropdown","selectOption","_this$props$value$spl","_this$props$value$spl2","prev_hour","prev_minute","is_type_selected","setState","last_updated_type","stopPropagation","resetValues","state","is_hour_selected","is_minute_selected","prevProps","prevState","_state","toggle","_props","preClass","start_moment_clone","_value$split","_value$split2","is_clearable","saveHourRef","is_enabled","saveMinuteRef","mm","TimePicker","toggleDropDown","is_open","handleChange","arg","saveRef","nodeName","wrapper_ref","target_element","handleClickOutside","contains","_props2","is_align_right","padding","prefix_class","readOnly","value_split","InfoBoxExpired","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","sell_info","profit_percentage","percentage_text","transaction_id","_sell_info2","_icon_flag2","_money2","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabs_item","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","_toggle_button2","toggled","ToggleButton","toggle_style","_icon_logout","switchAccount","setLoginFlag","InkBar","inkbar_style","_login","_app_config","Route","render","_login_prompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","nextProps","is_main_drawer_on","is_notifications_drawer_on","drawer_bg_class","show","drawer_class","CSSTransition","in","classNames","unmountOnExit","footer","icon_link","drawer_component","_Types","ContractTypeCell","IconTradeType","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","_details_header2","display_status","_details_contents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_InfoBox","InfoBox","is_trade_page","removeError","is_ended","box_class","ended","Contents","InfoBoxGeneral","InfoBoxDigit","_contract_error2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","subscriptions","forget_requested","subscription_id","dispatch","sub_id","stream_id","sub_info","subscribers","fnc","forgetStream","fncCallback","forgets_list","hasCallbackFunction","hasValues","request_obj","values_obj","every","isDeepEqual","callback","msg_types","types_to_forget","sub_ids","forget_all","client_store","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","isValidLoginid","ResponseHandlers","websiteStatus","ServerTime","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setBalance","setResidence","country","sendBuffered","country_code","email","flow","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","wait","stop","setError","is_available","site_status","availability","setCurrencies","showError","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","getBasicUpgradeInfo","upgrade_info","can_upgrade","can_open_multi","_declarative_validation_rules","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","val","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","_Language","bound","is_socket_opened","currentLanguage","getAllowedLanguages","exclude_languages","getAll","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chart_barriers","_chart_markers","_details","chart_config","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","getDetailsExpiry","getDetailsInfo","computed","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","x","y","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","align","_icon_entry_spot2","IconEntrySpot","oneOf","entry_spot","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","toMoment","epoch","convertToUnix","moment_obj","setTime","formatDate","daysFromTodayTo","diff","asDays","seconds","formatted_str","_format_response","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","underlying","display_name","unshift","findIndex","initializePortfolio","clearTable","purchase","portfolio_pos","server_epoch","active_positions","portfolioHandler","transactionHandler","parseFloat","details","_chart_barrier_store","_chart_marker_store","_chart","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","wsSubscribe","wsForget","wsSendRequest","timePromise","tick_chart_types","is_contract_mode","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","subtract","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","time_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_query_string","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validation_rules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","chart_id","debouncedProposal","_lodash2","_descriptor33","proposal_requests","processNewValuesAsync","changeDurationValidationRules","query_string_values","updateQueryString","addToastMessage","setQueryParam","pickDefaultSymbol","_asyncToGenerator","_e$target","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","isCryptocurrency","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","values","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","getProposalInfo","setChartBarrier","query_params","param","duration_options","prepareTradeStore","runInAction","_callee5","_context5","query_string","URL","search","URLSearchParams","url_object","param_object","delete","append","replaceState","set_query_string","getQueryParams","abrupt","_x","_x2","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","_proposal_response$ec","Currency","Duration","StartDate","currencies_list","t0","extendOrReplace","t1","getCurrenciesAsync","t2","sent","getMethodsList","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","source","new_values","_currency","default_currency","buildCurrenciesList","getDefaultCurrency","fiat","crypto","supported_currencies","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_date","obj_expiry_time","obj_duration_min_max","ask_price","returns","toFixed","display_value","new_req","createProposalRequestForContract","current_req","type_of_contract","obj_expiry","isSame","parseInt","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_base_name2","_theme_wrapper2","_header2","_error_boundary2","_app_contents2","_routes2","_PortfolioDrawer2","_toast_message2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","PortfolioDrawer","toggleDrawer","body_content","_portfolio_drawer_card2","Suspense","fallback","portfolio-drawer--open","_simplebarReact2","togglePortfolioDrawer","IconArrow","IconBack","transform","PortfolioDrawerCard","_binary_link2","_contract_type_cell2","_remaining_time2","IconType","rx","stroke","strokeLinecap","IconBell","IconCashier","IconHamburger","IconTrade","SmartChart","form_wrapper_class","_info_box2","onSymbolChange","updateChartType","updateGranularity","_test2","_form_layout2","is_contract_visible","_contract_details2","Test","setVisibility","stateVisibility","styles","container","fontSize","lineHeight","zIndex","background","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","entries","v","_ref4","FormLayout","_screen_small2","_screen_large2","ScreenLarge","sidebar-items__slideout","_contract_type2","_trade_params2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","setWrapperRef","is_dialog_open","getDisplayText","_this$props","findInArray","getStyles","container_classes","tabIndex","IconTradeCategory","category","_contract_type_dialog2","_contract_type_list2","IconCategory","ContractTypeDialog","_full_screen_dialog2","element","ContractTypeList","_contract_type_item2","objectOrObservableObject","ContractTypeItem","_popconfirm","_popconfirm_element","handleClose","handleOpen","popconfirm_element","cloneElement","ContractInfo","icon_type","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchase_result2","PurchaseResult","_error_balance","_error_general","_error_login","_icon_lock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","has_currency","amount_container_class","three-columns","_DropDown2","_input_field2","Dropdown","onKeyPressed","getItemFromValue","getValueFromIndex","curr_index","is_list_visible","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","onKeyDown","isArrayLike","Items","highlightedIdx","items","expiry_list","now_date","min_date_duration","max_date_duration","min_date_expiry","min_day","max_day","start_date_time","moment_now","new_min_day","new_max_day","moment_today","startOf","is_same_day","date_time","_start_time$split","_start_time$split2","moment_start_date_time","duration_unit_text","datepicker_footer","has_end_time","expiry","pop","endtime_container_class","has-time","_DatePicker2","is_read_only","has_today_btn","_time_picker2","DatePicker","is_datepicker_visible","is_close_btn_visible","onClickOutside","mainNode","updateDatePickerValue","onSelectCalendar","isValid","onChangeInput","clearDatePickerInput","calendar","resetCalendar","new_date","current_date","_this$props2","nativeEvent","defaultValue","_date_picker_input2","class_name","_Calendar2","onSelect","defaultProps","Calendar","DatePickerInput","_initialiseProps","_calendar_header2","navigators","calendarViews","_calendar_panel2","panelSelectors","_calendar_footer2","setToday","nextMonth","navigateTo","previousMonth","nextYear","previousYear","nextDecade","previousDecade","nextCentury","previousCentury","updateSelectedDate","month","updateSelected","year","decade","is_add","_props3","moment_date","dataset","is_before","is_after","formatted_date","_props4","default_date","_props5","now","_props6","start_of_period","endOf","CalendarFooter","_calendar_button2","role","CalendarHeader","is_date_view","is_month_view","is_year_view","is_decade_view","CalendarPanel","_panels","calendar_panel","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendar_days","_calendar_months","_calendar_years","_calendar_decades","week_headers","days","dates","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","first_day","last_day","moment_min_date","moment_max_date","moment_selected","padLeft","moment_start_date","is_active","is_today","today","data-date","getDays","selected_month","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","data-month","selected_year","current_year","years","data-year","decades","min_year","max_year","range","_range$split","_range$split2","start_year","end_year","data-decade","last_digit_numbers","current_date_config","getOwnPropertyNames","acc","prop","getPropFromStores","_len2","ScreenSmall","_mobile_widget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_details_group2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_icon_tick2","won","lost","IconTick","circle_color","tick_color","_icon_error2","ContractError","_ref$message","digits_array","tick_count","latest_digit","display_array","last_item","_digit_display2","digit_info","digit_number","_info_box_expired2","DigitDisplay","_ref$digit_info","digit_class","last","SellInfo","_localize3","open_tag_id","tag","tag_id","before","pair_code","isValidElement","arr","is_started","_contract_sell2","onClickSell","ContractSell","_sell_button2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","_close_button2","shape","CloseButton","ToastMessage","toast","_ToastMessage2","arrayOf","AppContents","app-contents--show-portfolio-drawer","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","NetworkStatus","_server_time2","TogglePortfolio","ToggleFullScreen","ToggleSettings","is_settings_visible","is_language_visible","toggleSettings","gmt_time","_network_status","_toggle_fullscreen","_toggle_portfolio","_toggle_settings","class","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","IconMaximize","IconQuickPortfolio","IconSettings","toggle_portfolio_class","toggle_settings_class","_settings_dialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings_dialog_container_class","Tabs","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabs_wrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settings_control2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_language_dialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","LoginButton","ToggleNotificationsDrawer","_account_info","_install_pwa_button","_login_button","_menu_links","_toggle_menu_drawer","_toggle_notifications_drawer","_AccountSwitcher","is_demo","account_title","getAccountTitle","account_type","AccountSwitcher","_account_switcher","_Drawer","_switch_account","_upgrade_button","makeAccountsList","getAllLoginids","is_virtual","getAccountInfo","account","accounts_toggle_btn","accounts_list","doSwitch","UpgradeButton","IconLogout","prompt","userChoice","choice_result","outcome","_InkBar2","_inkbar","InkBarDiv","updateInkbarPosition","closest","clearInkBar","offsetLeft","offsetWidth","active_el","other_props","_route_with_sub_routes2","LoginPrompt","onSignup","_localize2","1_2","3_2","website_name","ToggleDrawer","_menu_drawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","Notifications","_notifications","ThemeWrapper","is_dark_theme","theme_wrapper_class","dark","light","Routes","_Routes2","_client_base","getAccountOfType","onCancel","DenialOfServiceModal","_full_page_modal2","confirm_button_text","cancel_button_text","FullPageModal","unregister","navigator","path_name","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \".min.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/audit/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([281,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = `btn${has_effect ? ' effect' : ''} ${className}`;\n    const button = (\n        <button id={id} className={classes} onClick={onClick || undefined} disabled={is_disabled}>\n            <span>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.object,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        this.root_store = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {}\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties));\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.constructor.name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.constructor.name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(localStorage.getItem(this.constructor.name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.constructor.name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}){\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules){\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger = this.validation_rules[property].trigger;\n        const inputs = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n}\n\n","export * from './date_time';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={`symbols ${currency.toLowerCase()}`} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import moment                    from 'moment';\nimport { localize }              from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }           from '_common/utility';\nimport { WS }                    from 'Services';\nimport { buildBarriersConfig }   from './barrier';\nimport { buildDurationConfig }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }         from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }          from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = time.split(':');\n        return moment.utc(isNaN(date) ? date : +date * 1000).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: getValidTime(sessions, buildMoment(start_date, start_time)),\n    });\n\n    const getExpiryDate = (expiry_date, start_date) => {\n        const moment_start  = moment.utc(start_date ? start_date * 1000 : undefined);\n        const moment_expiry = moment.utc(expiry_date || undefined);\n        // forward starting contracts should only show today and tomorrow as expiry date\n        const is_invalid = moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n        return {\n            expiry_date: (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD'),\n        };\n    };\n\n    // has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is after start time\n    const getExpiryTime = (sessions, start_date, start_time, expiry_date, expiry_time) => {\n        const start_moment = start_date ? buildMoment(start_date, start_time) : moment().utc();\n        const end_moment   = buildMoment(expiry_date, expiry_time);\n\n        let end_time = expiry_time;\n        if (sessions && !isSessionAvailable(sessions, end_moment)) {\n            end_time = getValidTime(sessions, end_moment, start_moment);\n        }\n        if (end_moment.isSameOrBefore(start_moment)) {\n            const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n            const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n            end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n        }\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getExpiryDate,\n        getExpiryTime,\n        getSessions,\n        getStartTime,\n        getStartType,\n\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Tooltip    from '../Elements/tooltip.jsx';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    icon,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n}) => {\n    const field_left_class = classNames('field-info left', { icon }, icon);\n\n    return (\n        <fieldset className={className}  onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className='fieldset-header'>\n                    <span className={field_left_class}>{header}</span>\n                </div>\n            }\n            {!!tooltip &&\n                <span className='field-info right'>\n                    <Tooltip\n                        alignment='left'\n                        icon='info'\n                        message={tooltip || 'Message goes here.'}\n                    />\n                </span>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    icon        : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    tooltip     : PropTypes.string,\n};\n\nexport default Fieldset;\n","const routes = {\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    message,\n    alignment,\n    children,\n    icon, // only question or info accepted\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className='tooltip' data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={icon_class} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.node,\n    icon     : PropTypes.string,\n    message  : PropTypes.string,\n};\n\nexport default Tooltip;\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && moment.utc(expiry_date).isAfter(moment(server_time).utc(), 'day');\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n","export default from './dropdown.jsx';\n","import PropTypes from 'prop-types';\n\nexport const CalendarPanelTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    date_format     : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    max_date        : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onClick      : PropTypes.object,\n    selected_date: PropTypes.string,\n};\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","import BinarySocket        from '_common/base/socket_base';\nimport { isEmptyObject }   from '_common/utility';\nimport SubscriptionManager from './subscription_manager';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                portfolio_drawer: root_store.ui.is_portfolio_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","export * from './icon_trade_types.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className }) => {\n    const loading_class = classNames('loading', className);\n    return (\n        <div className='block-ui'>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default UILoader;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    className,\n    error_messages,\n    fractional_digits,\n    helper,\n    is_disabled,\n    is_float,\n    is_signed = false,\n    label,\n    max_length,\n    name,\n    onChange,\n    placeholder,\n    prefix,\n    required,\n    type,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n\n    const changeValue = (e) => {\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '';\n            const signed_regex = is_signed ? '(?!^([-+]0)$|^[-+]?$)^[+-]?' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const input =\n        <input\n            className={classNames({ error: has_error })}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-tip\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onChange={changeValue}\n            placeholder={placeholder || undefined}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={value}\n        />;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <i><span className={`symbols ${prefix.toLowerCase()}`} /></i>\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                { input }\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    className        : PropTypes.string,\n    error_messages   : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits: PropTypes.number,\n    helper           : PropTypes.bool,\n    is_disabled      : PropTypes.string,\n    is_float         : PropTypes.bool,\n    is_signed        : PropTypes.bool,\n    label            : PropTypes.string,\n    max_length       : PropTypes.number,\n    name             : PropTypes.string,\n    onChange         : PropTypes.func,\n    placeholder      : PropTypes.string,\n    prefix           : PropTypes.string,\n    required         : PropTypes.bool,\n    type             : PropTypes.string,\n    value            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","export * from './icon_maximize.jsx';\nexport * from './icon_quick_portfolio.jsx';\nexport * from './icon_settings.jsx';\n","export BinaryLink         from './binary_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","export default from './error_component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import moment from 'moment';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === option.date);\n            const current_session   = { open: moment.unix(option.open).utc(), close: moment.unix(option.close).utc() };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : moment.unix(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : option.date,\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = moment.utc(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = moment.utc(),\n    start_moment           = moment.utc(),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, undefined, should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(should_only_check_hour ? session.open.clone().minute(0) : session.open, session.close, null, '[]')))\n);\n","// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'last_digit',\n    'start_date',\n    'symbol',\n];\n\nexport const non_proposal_query_string_variable = [\n    'contract_start_type',\n    'expiry_type',\n];\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import Client from '_common/base/client_base';\n\nexport const isClientAllowedToVisit = () => !Client.isLoggedIn() || Client.get('is_virtual') ||\n    Client.get('landing_company_shortcode') === 'costarica';\n","import React   from 'react';\n\nexport const PortfolioLazy = React.lazy(() => import('./Containers/portfolio.jsx'));\nexport const EmptyPortfolioMessageLazy = React.lazy(() => import('./Components/empty_portfolio_message.jsx'));\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import React           from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\nimport { PortfolioLazy as Portfolio } from 'Modules/Portfolio';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = React.lazy(() => import(/* webpackChunkName: \"contract\" */ 'Modules/Contract'));\n// const Portfolio       = React.lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = React.lazy(() => import(/* webpackChunkName: \"settings\" */ 'Modules/settings/settings.jsx'));\nconst Statement       = React.lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = React.lazy(() => import(/* webpackChunkName: \"account_password\" */ 'Modules/settings/sections/account_password.jsx'));\nconst ApiToken               = React.lazy(() => import(/* webpackChunkName: \"api_toke\" */ 'Modules/settings/sections/api_token.jsx'));\nconst AuthorizedApplications = React.lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized_applications.jsx'));\nconst CashierPassword        = React.lazy(() => import(/* webpackChunkName: \"cashier_password\" */ 'Modules/settings/sections/cashier_password.jsx'));\nconst FinancialAssessment    = React.lazy(() => import(/* webpackChunkName: \"financial_assessment\" */ 'Modules/settings/sections/financial_assessment.jsx'));\nconst Limits                 = React.lazy(() => import(/* webpackChunkName: \"limits\" */ 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = React.lazy(() => import(/* webpackChunkName: \"login_history\" */ 'Modules/settings/sections/login_history.jsx'));\nconst PersonalDetails        = React.lazy(() => import(/* webpackChunkName: \"personal_details\" */ 'Modules/settings/sections/personal_details.jsx'));\nconst SelfExclusion          = React.lazy(() => import(/* webpackChunkName: \"self_exclusion\" */ 'Modules/settings/sections/self_exclusion.jsx'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n]);\n\nlet routes_config;\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon_trade_categories.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className='contracts-modal-list'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children: PropTypes.any,\n    onClose : PropTypes.func,\n    title   : PropTypes.string,\n    visible : PropTypes.bool,\n};\n\nexport default FullScreenDialog;\n","import PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from '_common/localize';\nimport { isEmptyObject }          from '_common/utility';\nimport { PopConfirm }             from 'App/Components/Elements/PopConfirm';\nimport UILoader                   from 'App/Components/Elements/ui_loader.jsx';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Fieldset                   from 'App/Components/Form/fieldset.jsx';\nimport { connect }                from 'Stores/connect';\nimport { isClientAllowedToVisit } from 'App/Middlewares/is_client_allowed_to_visit';\nimport ContractInfo               from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox                 from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock               from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    barrier_count,\n    currency,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !isClientAllowedToVisit();\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary green'\n                has_effect\n                text={localize('Purchase')}\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n                wrapperClassName='submit-section'\n            />\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='purchase-option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader />\n                        }\n                        <ContractInfo\n                            barrier_count={barrier_count}\n                            contract_title={trade_types[type]}\n                            contract_type={type}\n                            currency={currency}\n                            proposal_info={info}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    barrier_count         : PropTypes.number,\n    currency              : PropTypes.string,\n    is_purchase_confirm_on: PropTypes.bool,\n    is_purchase_enabled   : PropTypes.bool,\n    is_purchase_locked    : PropTypes.bool,\n    is_trade_enabled      : PropTypes.bool,\n    onClickPurchase       : PropTypes.func,\n    onHoverPurchase       : PropTypes.func,\n    proposal_info         : PropTypes.object,\n    purchase_info         : PropTypes.object,\n    resetPurchase         : PropTypes.func,\n    togglePurchaseLock    : PropTypes.func,\n    trade_types           : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        barrier_count         : modules.trade.barrier_count,\n        currency              : modules.trade.currency,\n        is_purchase_enabled   : modules.trade.is_purchase_enabled,\n        is_trade_enabled      : modules.trade.is_trade_enabled,\n        onClickPurchase       : modules.trade.onPurchase,\n        onHoverPurchase       : modules.trade.onHoverPurchase,\n        resetPurchase         : modules.trade.requestProposal,\n        proposal_info         : modules.trade.proposal_info,\n        purchase_info         : modules.trade.purchase_info,\n        trade_types           : modules.trade.trade_types,\n        is_purchase_confirm_on: ui.is_purchase_confirm_on,\n        is_purchase_locked    : ui.is_purchase_lock_on,\n        togglePurchaseLock    : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ common, modules }) => ({\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n    })\n)(TradeParams);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nexport default function CalendarButton({ children, className, is_hidden, label, onClick }) {\n    return (\n        <React.Fragment>\n            { !is_hidden &&\n                <span\n                    type='button'\n                    className={className}\n                    onClick={onClick}\n                >\n                    {label}\n                    {children}\n                </span>\n            }\n        </React.Fragment>\n    );\n}\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n","import {\n    observer,\n    PropTypes as MobxPropTypes }      from 'mobx-react';\nimport moment                         from 'moment';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { localize }                   from '_common/localize';\nimport { isSessionAvailable }         from 'Stores/Modules/Trading/Helpers/start_date';\n\nclass TimePickerDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n        this.minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n        this.state    = {\n            is_hour_selected  : false,\n            is_minute_selected: false,\n            last_updated_type : null,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { is_hour_selected, is_minute_selected } = this.state;\n        if (is_hour_selected && is_minute_selected) {\n            this.resetValues();\n            this.props.toggle();\n        }\n        if (!prevProps.className && this.props.className === 'active') {\n            this.resetValues();\n        }\n        if (prevState.last_updated_type !== this.state.last_updated_type && this.state.last_updated_type) {\n            this.setState({ last_updated_type: null });\n        }\n    }\n\n    resetValues() {\n        this.setState({\n            is_hour_selected  : false,\n            is_minute_selected: false,\n        });\n    }\n\n    selectOption = (type, value, is_enabled = true) => {\n        if (is_enabled) {\n            const [ prev_hour, prev_minute ] = this.props.value.split(':');\n            if ((type === 'h' && value !== prev_hour) || (type === 'm' && value !== prev_minute)) {\n                const is_type_selected = type === 'h' ? 'is_hour_selected' : 'is_minute_selected';\n                this.setState({\n                    last_updated_type : type,\n                    [is_type_selected]: true,\n                });\n                this.props.onChange(`${type === 'h' ? value : prev_hour}:${type === 'm' ? value : prev_minute}`);\n            }\n        }\n    };\n\n    clear = (event) => {\n        event.stopPropagation();\n        this.resetValues();\n        this.props.onChange('');\n    };\n\n    render() {\n        const { preClass, value, toggle, start_date, sessions } = this.props;\n        const start_moment       = moment(start_date * 1000 || undefined).utc();\n        const start_moment_clone = start_moment.clone().minute(0).second(0);\n        const [ hour, minute ]   = value.split(':');\n        return (\n            <div className={`${preClass}-dropdown ${this.props.className}`}>\n                <div\n                    className={`${preClass}-panel`}\n                    onClick={toggle}\n                >\n                    <span className={value ? '' : 'placeholder'}>{value || localize('Select time')}</span>\n                    {(!('is_clearable' in this.props) || this.props.is_clearable) &&\n                        <span\n                            className={`${preClass}-clear`}\n                            onClick={this.clear}\n                        />\n                    }\n                </div>\n                <div className={`${preClass}-selector`}>\n                    <div\n                        ref={this.saveHourRef}\n                        className={`${preClass}-hours`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                        <div className='list-container'>\n                            {this.hours.map((h, key) => {\n                                start_moment_clone.hour(h);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment, true);\n                                return (\n                                    <div\n                                        className={`list-item${hour === h ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('h', h, is_enabled); }}\n                                    >\n                                        {h}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div\n                        ref={this.saveMinuteRef}\n                        className={`${preClass}-minutes`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                        <div className='list-container'>\n                            {this.minutes.map((mm, key) => {\n                                start_moment_clone.hour(hour).minute(mm);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment);\n                                return (\n                                    <div\n                                        className={`list-item${minute === mm ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('m', mm, is_enabled); }}\n                                    >{mm}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TimePicker extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            value  : '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            is_nativepicker,\n            value,\n            name,\n            is_align_right,\n            placeholder,\n            start_date,\n            sessions,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={`${prefix_class}${this.props.padding ? ' padding' : ''}${this.state.is_open ? ' active' : ''}`}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                        />\n                        : (\n                            <React.Fragment>\n                                <input\n                                    ref={this.saveRef}\n                                    type='text'\n                                    readOnly\n                                    id={`${prefix_class}-input`}\n                                    className={`${prefix_class}-input ${this.state.is_open ? 'active' : ''}`}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <TimePickerDropdown\n                                    className={`${this.state.is_open ? 'active' : ''}${is_align_right ? ' from-right' : '' }`}\n                                    toggle={this.toggleDropDown}\n                                    onChange={this.handleChange}\n                                    preClass={prefix_class}\n                                    start_date={start_date}\n                                    value={value}\n                                    sessions={sessions}\n                                    is_clearable={this.props.is_clearable}\n                                />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    is_align_right : PropTypes.bool,\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.string,\n};\n\nTimePickerDropdown.propTypes = {\n    className   : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    onChange    : PropTypes.func,\n    preClass    : PropTypes.string,\n    sessions    : MobxPropTypes.arrayOrObservableArray,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    toggle     : PropTypes.func,\n    value      : PropTypes.string,\n    value_split: PropTypes.bool,\n};\n\nexport default observer(TimePicker);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <ToggleButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst ToggleButton = ({ style, toggled }) => {\n    const toggle_style = style || 'toggle-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nToggleButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default ToggleButton;\n","export * from './icon_logout.jsx';\n","import GTM              from '_common/base/gtm';\nimport * as SocketCache from '_common/base/socket_cache';\nimport Client           from '_common/base/client_base';\n\n/**\n * Switch to the given loginid account.\n *\n * @param loginid\n */\nexport const switchAccount = (loginid) => {\n    if (!loginid || !Client.get('token', loginid)) {\n        return;\n    }\n    sessionStorage.setItem('active_tab', '1');\n    // set local storage\n    GTM.setLoginFlag('account_switch');\n    Client.set('cashier_confirmed', 0);\n    Client.set('accepted_bch', 0);\n    Client.set('loginid', loginid);\n    SocketCache.clear();\n    window.location.reload();\n};\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst InkBar = ({ left, width }) => {\n    const inkbar_style = {\n        left,\n        width,\n    };\n\n    return (\n        <span style={inkbar_style} className='inkbar' />\n    );\n};\n\nInkBar.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { InkBar };\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport Client              from '_common/base/client_base';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !Client.isLoggedIn()) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.alignment === 'left') {\n            this.setState({ is_this_drawer_on: nextProps.is_main_drawer_on });\n        } else if (this.props.alignment === 'right'){\n            this.setState({ is_this_drawer_on: nextProps.is_notifications_drawer_on });\n        }\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date_picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n// document.addEventListener('DOMContentLoaded', initApp);\n// window.addEventListener('pageshow', (e) => { // Safari doesn't fire load event when using back button\n//     if (e.persisted) {\n//         initApp();\n//     }\n// });\n","var map = {\n\t\"./ja\": 218,\n\t\"./ja.js\": 218\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 489;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport OutdatedBrowser      from 'Services/outdated_browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import BinarySocket   from '_common/base/socket_base';\nimport {\n    cloneObject,\n    getPropertyValue,\n    isDeepEqual,\n    isEmptyObject }   from '_common/utility';\n\n/**\n * A layer over BinarySocket to handle subscribing to streaming calls\n * in order to keep track of subscriptions, manage forget, prevent multiple subscription at the same time, ...\n *\n * structure of the the subscription object is:\n * {\n *     1: { msg_type: 'proposal', request: { ... }, stream_id: '...', subscribers: [ ... ] },\n *     2: ...\n * }\n * object keys: subscription_id that assigned to each subscription\n * msg_type   : msg_type of the request for faster filtering\n * request    : the request object, used to subscribe to the same stream when there is a new subscribe request with exactly the same values\n * stream_id  : id of the stream which stored from its response and used to forget the stream when needed\n * subscribers: an array of callbacks to dispatch the response to\n */\nconst SubscriptionManager = (() => {\n    const subscriptions    = {};\n    const forget_requested = {};\n\n    let subscription_id = 0;\n\n    /**\n     * To submit request for a new subscription\n     *\n     * @param {String}   msg_type             msg_type of the request\n     * @param {Object}   request_obj          the whole object of the request to be made\n     * @param {Function} fncCallback          callback function to pass the responses to\n     * @param {Boolean}  should_forget_first  when it's true: forgets the previous subscription, then subscribes after receiving the forget response (if any)\n     */\n    const subscribe = (msg_type, request_obj, fncCallback, should_forget_first = false) => {\n        if (should_forget_first) {\n            forget(msg_type, fncCallback).then(() => {\n                subscribe(msg_type, request_obj, fncCallback);\n            });\n            return;\n        }\n\n        let sub_id = Object.keys(subscriptions).find(id => isDeepEqual(request_obj, subscriptions[id].request));\n\n        if (!sub_id) {\n            sub_id = ++subscription_id;\n\n            subscriptions[sub_id] = {\n                msg_type,\n                request    : cloneObject(request_obj),\n                stream_id  : '',             // stream_id will be updated after receiving the response\n                subscribers: [fncCallback],\n            };\n\n            BinarySocket.send(request_obj, {\n                callback: (response) => dispatch(response, sub_id),\n            });\n        } else if (!hasCallbackFunction(sub_id, fncCallback)) {\n            // there is already an active subscription for the very same request which fncCallback is not subscribed to it yet\n            subscriptions[sub_id].subscribers.push(fncCallback);\n        }\n    };\n\n    // dispatches the response to subscribers of the specific subscription id (internal use only)\n    const dispatch = (response, sub_id) => {\n        const stream_id = getPropertyValue(response, [response.msg_type, 'id']);\n\n        if (!subscriptions[sub_id]) {\n            if (!forget_requested[stream_id]) {\n                forgetStream(stream_id);\n            }\n            return;\n        }\n\n        const sub_info = subscriptions[sub_id];\n        // set the stream_id\n        if (!sub_info.stream_id && stream_id) {\n            sub_info.stream_id = stream_id;\n        }\n\n        // callback subscribers\n        const subscribers = sub_info.subscribers;\n        if (subscribers.length) {\n            if (\n                // it is the first response\n                !sub_info.stream_id &&\n                    (\n                        // the first response returned error\n                        response.error\n                        || (\n                            // not a subscription (i.e. subscribed proposal_open_contract for an expired contract)\n                            // also to filter out streams with no stream id but later it will continue streaming (i.e. proposal_open_contract without contract id)\n                            !isEmptyObject(response[response.msg_type]) &&\n                            // check msg_type to filter out those calls which don't return stream `id` on first response (tick_history, ...)\n                            response.msg_type === sub_info.msg_type\n                        )\n                    )\n                ||\n                // remove when response isn't first and response has no stream_id\n                !stream_id && sub_info.stream_id\n            ) {\n                delete subscriptions[sub_id];\n            }\n            sub_info.subscribers.forEach((fnc) => {\n                fnc(response);\n            });\n        } else {\n            delete subscriptions[sub_id];\n            forgetStream(sub_info.stream_id);\n        }\n    };\n\n    /**\n     * To forget a subscription which submitted for a specific callback function\n     *\n     * @param  {String}   msg_type      msg_type to forget\n     * @param  {Function} fncCallback   the same function passed to subscribe()\n     *     (this is the way to distinguish between different subscribers of the same stream at the same time)\n     * @param  {Object}   match_values  optional, to only forget subscriptions having request that \"contains\" provided values\n     * @return {Promise}  the promise object of all possible forget requests\n     */\n    const forget = (msg_type, fncCallback, match_values) => {\n        if (typeof fncCallback !== 'function') {\n            throw new Error(`Missing callback function. To forget all subscriptions of msg_type: ${msg_type}, please call forgetAll().`);\n        }\n\n        // find corresponding id(s)\n        const sub_ids = Object.keys(subscriptions).filter(id => (\n            subscriptions[id].msg_type === msg_type &&\n            hasCallbackFunction(id, fncCallback)\n        ));\n\n        const forgets_list = [];\n        sub_ids.forEach((id) => {\n            if (match_values && !hasValues(subscriptions[id].request, match_values)) {\n                return;\n            }\n            const stream_id = subscriptions[id].stream_id;\n            if (stream_id && subscriptions[id].subscribers.length === 1) {\n                delete subscriptions[id];\n                forgets_list.push(forgetStream(stream_id));\n            } else {\n                // there are other subscribers, or for some reason there is no stream_id:\n                // (i.e. returned an error, or forget() being called before the first response)\n                subscriptions[id].subscribers.splice(subscriptions[id].subscribers.indexOf(fncCallback), 1);\n            }\n        });\n        return Promise.all(forgets_list);\n    };\n\n    /**\n     * To forget all active subscriptions of a list of msg_types\n     *\n     * @param  {String}  msg_types  list of msg_types to forget\n     * @return {Promise} the promise object of all possible forget_all requests\n     */\n    const forgetAll = (...msg_types) => {\n        const types_to_forget = {};\n\n        msg_types.forEach((msg_type) => {\n            const sub_ids = Object.keys(subscriptions).filter(id => subscriptions[id].msg_type === msg_type);\n            if (sub_ids.length) {\n                sub_ids.forEach((id) => {\n                    delete subscriptions[id];\n                });\n                types_to_forget[msg_type] = true;\n            }\n        });\n\n        return Promise.resolve(\n            !isEmptyObject(types_to_forget) ?\n                BinarySocket.send({ forget_all: Object.keys(types_to_forget) }) :\n                {}\n        );\n    };\n\n    const forgetStream = (stream_id) => {\n        forget_requested[stream_id] = true; // to prevent forgetting multiple times\n        return Promise.resolve(\n            stream_id ?\n                BinarySocket.send({ forget: stream_id }).then(() => { delete forget_requested[stream_id]; }) :\n                {}\n        );\n    };\n\n    const hasCallbackFunction = (sub_id, fncCallback) =>\n        (subscriptions[sub_id] && subscriptions[sub_id].subscribers.indexOf(fncCallback) !== -1);\n\n    const hasValues = (request_obj, values_obj) => (\n        typeof request_obj === 'object' &&\n        typeof values_obj  === 'object' &&\n        Object.keys(values_obj).every(key => request_obj[key] === values_obj[key])\n    );\n\n    return {\n        subscribe,\n        forget,\n        forgetAll,\n    };\n})();\n\nexport default SubscriptionManager;\n","import { action, flow }     from 'mobx';\nimport Client               from '_common/base/client_base';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!Client.isValidLoginid()) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== Client.get('loginid')) {\n                        requestLogout();\n                    } else {\n                        Client.responseAuthorize(response);\n                        setBalance(response.authorize.balance);\n                        WS.subscribeBalance(ResponseHandlers.balance);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(response.authorize.country || Client.get('residence'));\n                        if (!Client.get('is_virtual')) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !Client.get('accepted_bch')) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    Client.set('email', response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            Client.set('residence', residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        Client.set('balance', balance);\n        client_store.balance = balance;\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action }   from 'mobx';\nimport { localize } from '_common/localize';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError(localize('Your web browser is out of date and may affect your trading experience. Proceed at your own risk.'));\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore();\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import { observable } from 'mobx';\nimport Client         from '_common/base/client_base';\nimport BaseStore      from './base_store';\n\nexport default class ClientStore extends BaseStore {\n    @observable balance;\n    @observable is_logged_in = !!Client.isLoggedIn();\n    @observable loginid      = Client.get('loginid');\n    @observable currency     = Client.get('currency') || '';\n    @observable upgrade_info = Client.getBasicUpgradeInfo();\n    @observable can_upgrade  = this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi;\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import {\n    action,\n    observable,\n}                          from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = ['ACH'];\n    const language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore();\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable,\n}                             from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport { WS }                 from 'Services';\nimport { localize }           from '_common/localize';\nimport { createChartBarrier } from './Helpers/chart_barriers';\nimport { createChartMarkers } from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo,\n}                             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract,\n}                             from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell,\n}                             from './Helpers/logic';\nimport BaseStore              from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    // TODO: don't localize on every call\n    return {\n        [localize('Contract Type')] : getContractTypeDisplay()[contract_type],\n        [localize('Start Time')]    : txt_start_time,\n        [localize('Entry Spot')]    : txt_entry_spot,\n        [localize('Purchase Price')]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    // TODO: don't localize on every call\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [localize('End Time')]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [localize('Exit Spot')]     : end_spot ? addComma(end_spot) : '-',\n            [localize('Exit Spot Time')]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [localize('Payout')]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const toMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nconst setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time.split(':');\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => moment(date || undefined, date_format).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = moment(date).utc().diff(moment().utc(), 'days');\n    return (!date || diff < 0) ? '' : diff + 1;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    onMount() {\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                      from 'mobx';\nimport moment                         from 'moment';\nimport Client                         from '_common/base/client_base';\nimport { WS }                         from 'Services';\nimport { formatStatementTransaction } from './Helpers/format_response';\nimport BaseStore                      from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @action.bound\n    clearTable() {\n        this.data            = [];\n        this.has_loaded_all  = false;\n        this.is_loading      = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to   && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            }\n        ).then(this.statementHandler);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const currency = Client.get('currency');\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction, currency));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    onMount() {\n        this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.clearTable();\n        this.clearDateFilter();\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    runInAction,\n    reaction,\n}                                     from 'mobx';\nimport Client                         from '_common/base/client_base';\nimport {\n    getMinPayout,\n    isCryptocurrency,\n}                                     from '_common/base/currency_base';\nimport BinarySocket                   from '_common/base/socket_base';\nimport { localize }                   from '_common/localize';\nimport { cloneObject, isEmptyObject } from '_common/utility';\nimport { WS }                         from 'Services';\nimport GTM                            from 'Utils/gtm';\nimport URLHelper                      from 'Utils/URL/url_helper';\nimport { processPurchase }            from './Actions/purchase';\nimport * as Symbol                    from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    non_proposal_query_string_variable,\n}                                     from './Constants/query_string';\nimport getValidationRules             from './Constants/validation_rules';\nimport { setChartBarrier }            from './Helpers/chart';\nimport ContractType                   from './Helpers/contract_type';\nimport { convertDurationLimit }       from './Helpers/duration';\nimport { processTradeParams }         from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName,\n}                                     from './Helpers/proposal';\nimport { pickDefaultSymbol }          from './Helpers/symbol';\nimport BaseStore                      from '../../base_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n    @observable currencies_list = {};\n    @observable currency        = Client.get('currency');\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '09:40';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = '12:30';\n    @observable sessions         = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n\n        if (Client.isLoggedIn) {\n            this.processNewValuesAsync({ currency: Client.get('currency') });\n        }\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        this.requestProposal();\n        e.preventDefault();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (is_changed_by_user && /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    proposal_requests = {};\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...non_proposal_query_string_variable,\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            WS.forgetAll('proposal').then(() => {\n                Object.keys(this.proposal_requests).forEach((type) => {\n                    WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n                });\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type = response.echo_req.contract_type;\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n    }\n\n    @action.bound\n    onUnmount() {\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        param_object.sort();\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${param_object.toString()}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, query_string);\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall  : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low   : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch      : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end        : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay       : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian      : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd   : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call    : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put     : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low: { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize } from '_common/localize';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom', { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend             from 'extend';\nimport Client             from '_common/base/client_base';\nimport { isEmptyObject }  from '_common/utility';\nimport ContractTypeHelper from './contract_type';\n\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Currency      from '../Actions/currency';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n\n    if (!Client.get('currency') && isEmptyObject(store.currencies_list)) {\n        extendOrReplace(snapshot, await Currency.getCurrenciesAsync(store.currency));\n    }\n\n    getMethodsList(store, new_state).forEach((fnc) => {\n        extendOrReplace(snapshot, fnc(snapshot));\n    });\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    Duration.onChangeExpiry,\n    StartDate.onChangeStartDate,\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import { WS }            from 'Services';\nimport {\n    buildCurrenciesList,\n    getDefaultCurrency } from '../Helpers/currency';\n\nexport const getCurrenciesAsync = async(currency) => {\n    const response = await WS.payoutCurrencies();\n\n    const currencies_list  = buildCurrenciesList(response.payout_currencies);\n    const default_currency = getDefaultCurrency(currencies_list, currency);\n\n    return {\n        currencies_list,\n        ...(default_currency),\n    };\n};\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = (store) => {\n    const { contract_type, start_date, duration_unit, expiry_time } = store;\n    let { start_time, expiry_date } = store;\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_date = ContractType.getExpiryDate(expiry_date, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    const obj_expiry_time = ContractType.getExpiryTime(sessions, start_date, start_time, expiry_date, expiry_time);\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n    };\n};\n","import moment                              from 'moment';\nimport { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport { convertToUnix }                   from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response) => {\n    const proposal = response.proposal || {};\n    const profit   = (proposal.payout - proposal.ask_price) || 0;\n    const returns  = profit * 100 / (proposal.ask_price || 1);\n\n    return {\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake    : proposal.display_value,\n        payout   : proposal.payout,\n        id       : proposal.id || '',\n        message  : proposal.longcode || response.error.message,\n        has_error: !!response.error,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = moment.utc(store.expiry_date);\n        const start_date  = moment.unix(store.start_date || (store.root_store.common.server_time / 1000)).utc();\n        const is_same_day = expiry_date.isSame(start_date, 'day');\n        const expiry_time = is_same_day ? store.expiry_time : '23:59:59';\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_portfolio_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    constructor() {\n        const local_storage_properties = [\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_portfolio_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('dark'));\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_portfolio_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePortfolioDrawer() { // show and hide Portfolio Drawer\n        this.is_portfolio_drawer_on = !this.is_portfolio_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        // TODO The value should be change to `True` whenever the design of showing installation prompt gets ready.\n        this.is_install_button_visible = false;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { isClientAllowedToVisit }  from 'App/Middlewares/is_client_allowed_to_visit';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PortfolioDrawer             from './Components/Elements/PortfolioDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast_message.jsx';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport ThemeWrapper                from './Containers/Layout/theme_wrapper.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Components/Elements/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <ThemeWrapper>\n                <div id='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PortfolioDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal is_visible={!isClientAllowedToVisit()} />\n                </ErrorBoundary>\n\n                <footer id='footer'>\n                    <Footer />\n                </footer>\n            </ThemeWrapper>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './portfolio_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport SimpleBar                      from 'simplebar-react';\nimport { localize }                   from '_common/localize';\nimport { EmptyPortfolioMessageLazy as EmptyPortfolioMessage } from 'Modules/Portfolio';\nimport { IconClose }                  from 'Assets/Common';\nimport { connect }                    from 'Stores/connect';\nimport PortfolioDrawerCard            from './portfolio_drawer_card.jsx';\n\n// const EmptyPortfolioMessage = React.lazy(() => import(\n//     /* webpackChunkName: \"portfolio.empty_message\" */'Modules/Portfolio/Components/empty_portfolio_message.jsx'\n// ));\n\nclass PortfolioDrawer extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_portfolio_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PortfolioDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <React.Suspense fallback={<div> Loading... </div>}>\n                <div className={classNames('portfolio-drawer', { 'portfolio-drawer--open': is_portfolio_drawer_on })}>\n                    <div className='portfolio-drawer__header'>\n                        <span className='portfolio-drawer__icon-main ic-portfolio' />\n                        <span className='portfolio-drawer__title'>{localize('Portfolio Quick Menu')}</span>\n                        <div\n                            className='portfolio-drawer__icon-close'\n                            onClick={toggleDrawer}\n                        >\n                            <IconClose />\n                        </div>\n                    </div>\n                    <div className='portfolio-drawer__body'>\n                        <SimpleBar style={{ height: '100%' }}>\n                            {body_content}\n                        </SimpleBar>\n                    </div>\n                </div>\n            </React.Suspense>\n        );\n    }\n}\n\nPortfolioDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_portfolio_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n        toggleDrawer          : ui.togglePortfolioDrawer,\n    })\n)(PortfolioDrawer);\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='arrow-path' d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='#D2D3DA' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#333' fillRule='nonzero' d='M3.6 8.5L7 12.2a.5.5 0 1 1-.8.6l-4-4.5a.5.5 0 0 1 0-.6l4-4.5a.5.5 0 0 1 .8.6L3.6 7.5h9.9a.5.5 0 1 1 0 1H3.6z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PortfolioDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink className='portfolio-drawer-card' to={getContractPath(id)}>\n        <React.Fragment>\n            <div className='portfolio-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`portfolio-drawer-card__indicative portfolio-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='portfolio-drawer-card__symbol'>{underlying}</span>\n            <span className='portfolio-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPortfolioDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PortfolioDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='8' width='10' height='1' rx='.5' />\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82l-2.137-1.71z' fillRule='nonzero' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' fillRule='nonzero' />\n                    </g>\n\n                );\n                break;\n            case 'call':\n                IconType = (\n                    <g fill='#2A3052'>\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82 3.812 8.11z' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' />\n                    </g>\n\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 6.75h-4v-1.5h4L4.5 4H6l1.5 2L6 8H4.5l1-1.25zM10.5 11.75h4v-1.5h-4l1-1.25H10l-1.5 2 1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M2.698 9.5H.218v-.537L1.36 7.762c.281-.32.422-.576.422-.764 0-.153-.033-.27-.1-.35-.067-.08-.163-.12-.29-.12a.362.362 0 0 0-.306.16.657.657 0 0 0-.117.4H.144A1.167 1.167 0 0 1 .762 6.05c.193-.104.41-.156.65-.156.383 0 .68.089.887.266.207.178.31.432.31.764 0 .14-.025.277-.077.41a1.793 1.793 0 0 1-.243.417 6.12 6.12 0 0 1-.531.584l-.46.53h1.4V9.5zM9.107 8.194h.47v.825h-.47V10h-1.07v-.98H6.252l-.064-.655 1.85-2.977v-.01h1.07v2.816zm-1.9 0h.83V6.772l-.066.108-.765 1.314zM15.205 5.894v.647h-.037c-.308 0-.56.074-.758.221a.933.933 0 0 0-.365.614.962.962 0 0 1 .703-.273c.308 0 .553.112.735.336.182.225.273.52.273.884 0 .226-.053.434-.16.623a1.141 1.141 0 0 1-.446.443c-.192.107-.404.16-.636.16-.253 0-.478-.058-.677-.172a1.183 1.183 0 0 1-.463-.492 1.62 1.62 0 0 1-.171-.738v-.33c0-.365.078-.695.235-.987.157-.292.381-.52.673-.687.291-.166.614-.249.97-.249h.124zm-.743 1.838a.47.47 0 0 0-.437.262v.246c0 .45.156.674.467.674.125 0 .23-.056.313-.168a.687.687 0 0 0 .126-.423.674.674 0 0 0-.128-.426.41.41 0 0 0-.34-.165z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 8.75H2v-1.5h3.5L4.5 6H6l1.5 2L6 10H4.5l1-1.25zM10.5 8.75H14v-1.5h-3.5l1-1.25H10L8.5 8l1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M2.041 9.5h-.825V6.873l-.81.237v-.625l1.56-.54h.075zM7.26 7.242h.505c.4 0 .6-.196.6-.587a.508.508 0 0 0-.143-.373c-.096-.096-.23-.145-.403-.145a.58.58 0 0 0-.37.124.378.378 0 0 0-.157.308h-1.07c0-.243.068-.46.203-.65.136-.191.323-.34.564-.446.24-.107.504-.16.792-.16.514 0 .918.117 1.212.352.294.234.441.557.441.968 0 .198-.06.386-.182.563a1.3 1.3 0 0 1-.532.43c.245.089.438.224.578.405.14.18.21.404.21.67 0 .414-.16.744-.477.991-.317.248-.734.371-1.25.371a2.05 2.05 0 0 1-.843-.172 1.32 1.32 0 0 1-.589-.48 1.246 1.246 0 0 1-.2-.696h1.076c0 .141.057.264.171.368a.605.605 0 0 0 .423.155.634.634 0 0 0 .45-.157.525.525 0 0 0 .168-.401c0-.233-.058-.398-.174-.495-.116-.098-.277-.146-.482-.146H7.26v-.797zM13.266 7.762l.217-1.817h2.078v.64h-1.409l-.08.706a.973.973 0 0 1 .23-.09c.096-.027.189-.04.28-.04.353 0 .625.105.814.314.19.209.285.502.285.88 0 .228-.051.434-.153.619a1.049 1.049 0 0 1-.428.426c-.184.1-.402.149-.652.149-.223 0-.432-.046-.628-.138a1.126 1.126 0 0 1-.459-.379.92.92 0 0 1-.163-.543h.825c.008.13.05.234.124.31a.395.395 0 0 0 .296.115c.277 0 .415-.205.415-.615 0-.38-.17-.569-.508-.569-.192 0-.335.062-.43.186l-.654-.154z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g transform='matrix(1 0 0 -1 0 16)' fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='#2A3052' fillRule='nonzero'>\n                        <path d='M9.839 9.87a.5.5 0 0 0 .707 0l2.019-2.019a.5.5 0 1 0-.707-.707l-1.666 1.665-3.794-3.793a.5.5 0 0 0-.707 0l-.454.454-.823-.824a.5.5 0 1 0-.707.708L4.884 6.53a.5.5 0 0 0 .707 0l.454-.454L9.839 9.87z' />\n                        <path d='M12.428 8.79a.5.5 0 1 0 1 0V6.667a.5.5 0 0 0-.5-.5h-2.12a.5.5 0 1 0 0 1h1.62v1.621zM3 11.7h10.5a.5.5 0 1 0 0-1H3a.5.5 0 1 0 0 1z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='stroke-white' d='M3 4h10.5' stroke='#2A3052' strokeLinecap='round' />\n                        <path d='M11.074 5.454a.5.5 0 0 0-.707-.708L5.924 9.191a.5.5 0 0 0 .041.744l.953.762-1.272 1.272a.5.5 0 0 0 .707.707l1.666-1.667a.5.5 0 0 0-.04-.744l-.953-.762 4.048-4.05z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M11.263 4.556l.034 3.944H10.282V6.26l-.676-.76H7.34v-.944z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='6.5' width='10' height='1' rx='.5' />\n                        <path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' fillRule='nonzero' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'put':\n                IconType = (\n                    <g fill='#2A3052'><path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g className='color2-fill' fill='none' fillRule='evenodd' stroke='none' strokeWidth='1'>\n            <g>\n                <path className='color1-stroke color2-fill color3-stroke' fill='none' stroke='#2A3052' d='M1.5 14.5h13a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1h-13a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1z' />\n                <path className='color1-stroke color3-stroke color4-fill portfolio-fix' stroke='#2A3052' d='M5.5 3v-.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V3' />\n                <path className='color1-stroke scale-fix' stroke='#2A3052' strokeLinecap='square' d='M0 8l4.047 2.248a2 2 0 0 0 .971.252h5.964a2 2 0 0 0 .971-.252L16 8' />\n                <path className='color1-stroke' stroke='#2A3052' strokeLinecap='round' d='M6.5 8.5h3' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container notice-msg'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<div> Loading... </div>} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <fieldset className='trade-types'>\n                    <ContractType />\n                </fieldset>\n                <TradeParams />\n                <div className='purchase-wrapper'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconArrow }         from 'Assets/Common';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open: false,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        }\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    }\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n                tabIndex='0'\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <IconArrow className='select-arrow' />\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                    />\n                </ContractTypeDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleSelect: PropTypes.func,\n    list        : MobxPropTypes.objectOrObservableObject,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={() => handleSelect(contract)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts   : MobxPropTypes.arrayOrObservableArray,\n    handleSelect: PropTypes.func,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    }, popconfirm_element)\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\n\nconst ContractInfo = ({\n    barrier_count,\n    contract_title,\n    contract_type,\n    currency,\n    proposal_info,\n}) => {\n    const icon_type = `${contract_type}${/^(call|put)$/i.test(contract_type) && barrier_count > 0 ? '_barrier' : ''}`.toLowerCase();\n\n    return (\n        <div className='box'>\n            <div className='left-column'>\n                <div className='type-wrapper'>\n                    <IconTradeType type={icon_type} className='type' />\n                </div>\n                <h4 className='trade-type'>{contract_title}</h4>\n            </div>\n            {(proposal_info.has_error || !proposal_info.id) ?\n                <div className={proposal_info.has_error ? 'error-info-wrapper' : ''}>\n                    <span>{proposal_info.message}</span>\n                </div>\n                :\n                <div className='purchase-info-wrapper'>\n                    <span className='purchase-tooltip'>\n                        <Tooltip alignment='left' icon='info' message={proposal_info.message} />\n                    </span>\n                    <div className='info-wrapper'>\n                        <div>{localize('Stake')}:</div>\n                        <div><Money amount={proposal_info.stake} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Payout')}:</div>\n                        <div><Money amount={proposal_info.payout} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Net Profit')}:</div>\n                        <div><Money amount={proposal_info.profit} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Return')}:</div>\n                        <div>{proposal_info.returns}</div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nContractInfo.propTypes = {\n    barrier_count : PropTypes.number,\n    contract_title: PropTypes.string,\n    contract_type : PropTypes.string,\n    currency      : PropTypes.string,\n    proposal_info : PropTypes.object,\n};\n\nexport default ContractInfo;\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-error'>\n            <div className='close-btn-container' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-result-wrapper'>\n        <div>\n            <strong>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='label'>{localize('Buy Price')}:</span>\n            <span className='buy-price'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Payout')}:</span>\n            <span className='payout'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-error-wrapper'>\n        <span className='info-text'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a href='javascript:;'><span className='info-text'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-lock-container'>\n        <div className='lock-container'>\n            <IconLock className='ic-lock' />\n        </div>\n        <h4>{localize('Purchase Locked')}</h4>\n        <Button\n            className='flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/duration.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\nimport StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport Client                   from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }          from '_common/base/currency_base';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const has_currency = Client.get('currency');\n    const amount_container_class = classNames('amount-container', {\n        'three-columns': !has_currency,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Invest Amount')}\n            icon='invest-amount'\n        >\n            <div className={amount_container_class}>\n                <Dropdown\n                    list={basis_list}\n                    value={basis}\n                    name='basis'\n                    onChange={onChange}\n                    is_nativepicker={is_nativepicker}\n                />\n                {!has_currency &&\n                    <Dropdown\n                        list={currencies_list}\n                        value={currency}\n                        name='currency'\n                        onChange={onChange}\n                        is_nativepicker={is_nativepicker}\n                    />\n                }\n                <InputField\n                    error_messages = {validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={has_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis            : PropTypes.string,\n    basis_list       : MobxPropTypes.arrayOrObservableArray,\n    currencies_list  : PropTypes.object,\n    currency         : PropTypes.string,\n    is_minimized     : PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Amount);\n","import { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport SimpleBar         from 'simplebar-react';\nimport { IconArrow }     from 'Assets/Common';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex,\n}  from './helpers';\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleVisibility   = this.handleVisibility.bind(this);\n        this.handleSelect       = this.handleSelect.bind(this);\n        this.setWrapperRef      = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.state = {\n            is_list_visible: false,\n            curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect(item) {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    onKeyPressed = (event) => {\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    setWrapperRef(node) {\n        this.wrapper_ref = node;\n    }\n\n    scrollToggle(state) {\n        this.is_open = state;\n        // Used to disable y-scroll on body - disabled in this component for now\n        // document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n            this.scrollToggle(this.state.is_list_visible);\n        }\n    }\n\n    handleVisibility() {\n        this.setState({ is_list_visible: !this.state.is_list_visible });\n        this.scrollToggle(!this.state.is_list_visible);\n    }\n\n    render() {\n        // TODO: Fix list not being populated in native picker dropdown before re-enabling\n        // if (this.props.is_nativepicker) {\n        //     return (\n        //         <NativeSelect\n        //             name={this.props.name}\n        //             value={this.props.value}\n        //             list={this.props.list}\n        //             onChange={this.props.onChange}\n        //         />\n        //     );\n        // }\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={`dropdown-container ${this.props.className ? this.props.className : ''} ${this.state.is_list_visible ? 'show' : ''}`}\n            >\n                <div\n                    className={`dropdown-display ${this.state.is_list_visible ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                    tabIndex='0'\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                <IconArrow className='select-arrow' />\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames='dropdown-list'\n                    unmountOnExit\n                >\n                    <div className='dropdown-list'>\n                        <div className='list-container'>\n                            <SimpleBar style={{ 'height': '100%' }}>\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list-label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </SimpleBar>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={`list-item ${ value === item.value ? 'selected' : ''} ${highlightedIdx === idx ? 'highlighted' : ''}`}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nconst NativeSelect = ({\n    name,\n    value,\n    list,\n    onChange,\n}) => (\n    <div className='select-wrapper'>\n        <select name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\n// ToDo: Refactor Drop-down.\n// It's now too risky to refactor Dropdown for 'list' and 'value' prop types.\nDropdown.propTypes = {\n    className      : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    list           : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    type    : PropTypes.string,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\n// ToDo: Refactor NativeSelect\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/input_field.jsx';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n    return (\n        <Fieldset\n            header={barrier_count > 1 ? localize('Barriers') : localize('Barrier')}\n            icon='barriers'\n        >\n            <InputField\n                type='number'\n                name='barrier_1'\n                value={barrier_1}\n                onChange={onChange}\n                error_messages = {validation_errors.barrier_1 || []}\n                is_float\n                is_signed\n            />\n\n            {barrier_count === 2 &&\n                <InputField\n                    type='number'\n                    name='barrier_2'\n                    value={barrier_2}\n                    onChange={onChange}\n                    error_messages = {validation_errors.barrier_2}\n                    is_float\n                    is_signed\n                />\n            }\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport moment                   from 'moment';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Datepicker               from 'App/Components/Form/DatePicker';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\nimport { convertDurationUnit }  from 'Stores/Modules/Trading/Helpers/duration';\n\n/* TODO:\n      1. disable days other than today and tomorrow if start date is forward starting\n*/\n\nconst expiry_list = [\n    { text: localize('Duration'), value: 'duration' },\n];\n\nlet now_date,\n    min_date_duration,\n    max_date_duration,\n    min_date_expiry,\n    min_day,\n    max_day,\n    start_date_time;\n\nconst Duration = ({\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    onChange,\n    is_minimized,\n    is_nativepicker,\n    server_time,\n    sessions,\n    start_date,\n    start_time,\n    validation_errors,\n}) => {\n    if (duration_min_max[contract_expiry_type]) {\n        const moment_now  = moment(server_time);\n        const new_min_day = convertDurationUnit(duration_min_max[contract_expiry_type].min, 's', 'd');\n        const new_max_day = convertDurationUnit(duration_min_max[contract_expiry_type].max, 's', 'd');\n        if (!now_date || moment_now.date() !== now_date.date() || (duration_unit === 'd' && (min_day !== new_min_day || max_day !== new_max_day))) {\n            if (duration_unit === 'd') {\n                min_day = new_min_day;\n                max_day = new_max_day;\n            }\n\n            const moment_today = moment_now.clone().startOf('day');\n\n            now_date          = moment_now.clone();\n            min_date_duration = moment_today.clone().add(min_day || 1, 'd');\n            max_date_duration = moment_today.clone().add(max_day || 365, 'd');\n            min_date_expiry   = moment_today.clone();\n        }\n    }\n\n    const moment_expiry = moment.utc(expiry_date);\n    const is_same_day   = moment_expiry.isSame(moment(start_date * 1000 || undefined).utc(), 'day');\n    if (is_same_day) {\n        const date_time = moment.utc(start_date * 1000 || undefined);\n        if (start_date) {\n            const [ hour, minute ] = start_time.split(':');\n            date_time.hour(hour).minute(minute).second(0).add(5, 'minutes');\n        }\n        // only update start time every five minutes, since time picker shows five minute durations\n        const moment_start_date_time = moment.unix(start_date_time);\n        if (!start_date_time || moment_start_date_time.isAfter(date_time) || moment_start_date_time.clone().add(5, 'minutes').isBefore(date_time) ||\n            (moment_start_date_time.minutes() !== date_time.minutes() && date_time.minutes() % 5 === 0)) {\n            start_date_time = date_time.unix();\n        }\n    }\n    if (is_minimized) {\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n    const datepicker_footer = min_day > 1 ?\n        localize('The minimum duration is [_1] days', [min_day]) :\n        localize('The minimum duration is [_1] day',  [min_day]);\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_same_day,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Trade Duration')}\n            icon='trade-duration'\n        >\n            <Dropdown\n                list={expiry_list}\n                value={expiry_type}\n                name='expiry_type'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n\n            {expiry_type === 'duration' ?\n                <React.Fragment>\n                    <div className='duration-container'>\n                        {duration_unit === 'd' && !is_nativepicker ?\n                            <Datepicker\n                                name='duration'\n                                min_date={min_date_duration}\n                                max_date={max_date_duration}\n                                mode='duration'\n                                onChange={onChange}\n                                value={duration || min_day}\n                                is_read_only\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                footer={datepicker_footer}\n                            /> :\n                            <InputField\n                                type='number'\n                                name='duration'\n                                value={duration}\n                                onChange={onChange}\n                                is_nativepicker={is_nativepicker}\n                                error_messages = {validation_errors.duration || []}\n                            />\n                        }\n                        <Dropdown\n                            list={duration_units_list}\n                            value={duration_unit}\n                            name='duration_unit'\n                            onChange={onChange}\n                            is_nativepicker={is_nativepicker}\n                        />\n                    </div>\n                </React.Fragment> :\n                <React.Fragment>\n                    <div className={endtime_container_class}>\n                        <Datepicker\n                            name='expiry_date'\n                            has_today_btn\n                            min_date={min_date_expiry}\n                            max_date={max_date_duration}\n                            start_date={start_date}\n                            onChange={onChange}\n                            value={expiry_date}\n                            is_read_only\n                            is_clearable={false}\n                            is_nativepicker={is_nativepicker}\n                        />\n                        {is_same_day &&\n                            <TimePicker\n                                onChange={onChange}\n                                is_align_right\n                                name='expiry_time'\n                                value={expiry_time}\n                                placeholder='12:00'\n                                start_date={start_date_time}\n                                sessions={sessions}\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                            />\n                        }\n                    </div>\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\n// ToDo: Refactor Duration.jsx and date_picker.jsx\nDuration.propTypes = {\n    contract_expiry_type: PropTypes.string,\n    duration            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time    : PropTypes.string,\n    expiry_type    : PropTypes.string,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    onChange       : PropTypes.func,\n    server_time    : PropTypes.object,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Duration);\n","import classNames      from 'classnames';\nimport moment          from 'moment';\nimport React           from 'react';\nimport { IconArrow }   from 'Assets/Common';\nimport {\n    formatDate,\n    daysFromTodayTo }  from 'Utils/Date';\nimport DatePickerInput from './date_picker_input.jsx';\nimport Calendar        from '../../Elements/Calendar';\n\nclass DatePicker extends React.PureComponent {\n    state = {\n        value                : '',\n        is_datepicker_visible: false,\n        is_close_btn_visible : false,\n    };\n\n    componentWillReceiveProps({ value, mode }) {\n        if (value === this.state.value) return;\n        this.updateDatePickerValue(value, mode);\n    }\n\n    componentWillMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState({ is_datepicker_visible: !this.state.is_datepicker_visible });\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (!('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_close_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_close_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!moment.utc(value).isValid) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value), 'duration');\n        } else {\n            this.updateDatePickerValue(value);\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        this.updateDatePickerValue(value, this.props.mode);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: '' }, this.updateStore);\n        this.calendar.resetCalendar();\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value, mode) => {\n        this.setState({ value }, this.updateStore);\n\n        // update Calendar\n        const { date_format, start_date } = this.props;\n        const new_date = (mode === 'duration') ? moment.utc().add(value, 'days').format(date_format) : value;\n        if (this.calendar && (moment.utc(new_date, date_format).isValid() || !new_date)) {\n            if (!new_date) {\n                const current_date = moment.utc(start_date).format(date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='datepicker-display'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker-native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker-native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                <div\n                    className='datepicker-display-wrapper'\n                    onMouseEnter={this.onMouseEnter}\n                    onMouseLeave={this.onMouseLeave}\n                >\n                    <DatePickerInput\n                        class_name='datepicker-display'\n                        mode={this.props.mode}\n                        name={this.props.name}\n                        placeholder={this.props.placeholder}\n                        onClick={this.handleVisibility}\n                        is_read_only={true}\n                        value={this.state.value}\n                    />\n                    <span\n                        className={classNames('picker-calendar-icon', {\n                            show: !this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.handleVisibility}\n                    />\n                    <span\n                        className={classNames('close-circle-icon', {\n                            show: this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.clearDatePickerInput}\n                    />\n                </div>\n                <div\n                    className={classNames('datepicker-calendar', {\n                        show: this.state.is_datepicker_visible,\n                    })}\n                >\n                    <Calendar\n                        ref={node => { this.calendar = node; }}\n                        onSelect={this.onSelectCalendar}\n                        {...this.props}\n                    >\n                        <DatePickerInput\n                            class_name='calendar-input'\n                            mode={this.props.mode}\n                            name={this.props.name}\n                            onChange={this.onChangeInput}\n                            placeholder={this.props.placeholder}\n                            is_read_only={'is_read_only' in this.props ? this.props.is_read_only : false}\n                            value={this.state.value}\n                        />\n                    </Calendar>\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...DatePickerInput.propTypes,\n    ...Calendar.propTypes,\n};\n\nexport default DatePicker;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nexport default function DatePickerInput(props) {\n    return (\n        <input\n            id={props.id}\n            name={props.name}\n            className={props.class_name}\n            readOnly={props.is_read_only}\n            placeholder={props.placeholder\n                || (props.mode === 'duration' ? localize('Select a duration') : localize('Select date'))}\n            onChange={props.onChange}\n            onClick={props.onClick}\n            value={props.value}\n        />\n    );\n}\n\nDatePickerInput.propTypes = {\n    class_name  : PropTypes.string,\n    id          : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    is_read_only: PropTypes.bool,\n    mode        : PropTypes.string,\n    name        : PropTypes.string,\n    onChange    : PropTypes.func,\n    onClick     : PropTypes.func,\n    placeholder : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number, // duration\n        PropTypes.string, // date\n    ]),\n};\n","export default from './calendar.jsx';\n","import moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\nimport CalendarPanel  from './calendar_panel.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date } = props;\n        const current_date = moment.utc(start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: '',           // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    // navigates to next or previous's month/year/decade/century\n    navigators = {\n        nextMonth      : () => { this.navigateTo(1,   'months', true); },\n        previousMonth  : () => { this.navigateTo(1,   'months', false); },\n        nextYear       : () => { this.navigateTo(1,   'years',  true); },\n        previousYear   : () => { this.navigateTo(1,   'years',  false); },\n        nextDecade     : () => { this.navigateTo(10,  'years',  true); },\n        previousDecade : () => { this.navigateTo(10,  'years',  false); },\n        nextCentury    : () => { this.navigateTo(100, 'years',  true); },\n        previousCentury: () => { this.navigateTo(100, 'years',  false); },\n    };\n\n    // selects a day, a month, a year, or a decade\n    panelSelectors = {\n        date  : (e, is_disabled) => { this.updateSelectedDate(e, is_disabled); },\n        month : (e) => { this.updateSelected(e, 'month'); },\n        year  : (e) => { this.updateSelected(e, 'year'); },\n        decade: (e) => { this.updateSelected(e, 'decade'); },\n    };\n\n    // sets Calendar active view\n    calendarViews = {\n        date  : () => { this.setState({ calendar_view: 'date'   }); },\n        month : () => { this.setState({ calendar_view: 'month'  }); },\n        year  : () => { this.setState({ calendar_view: 'year'   }); },\n        decade: () => { this.setState({ calendar_view: 'decade' }); },\n    };\n\n    navigateTo = (value, unit, is_add) => {\n        const { date_format, max_date, min_date } = this.props;\n\n        let new_date = moment.utc(this.state.calendar_date, date_format)[is_add ? 'add' : 'subtract'](value, unit).format(date_format);\n\n        if (unit === 'months' && this.isPeriodDisabled(new_date, 'month')) return;\n\n        if (unit === 'years'  && this.isPeriodDisabled(new_date, 'years')) {\n            new_date = is_add ? max_date : min_date;\n        }\n\n        this.setState({ calendar_date: moment.utc(new_date, date_format).format(date_format) }); // formatted date\n    };\n\n    updateSelectedDate = (e, is_disabled) => {\n        if (is_disabled) {\n            return;\n        }\n\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = moment.utc(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(moment.utc(min_date));\n        const is_after    = moment_date.isAfter(moment.utc(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = moment.utc(this.state.calendar_date, this.props.date_format)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = moment.utc(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = moment().utc().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = moment.utc(date).startOf(unit);\n        const end_of_period   = moment.utc(date).endOf(unit);\n        return end_of_period.isBefore(moment.utc(min_date))\n            || start_of_period.isAfter(moment.utc(max_date));\n    };\n\n    render() {\n        const { children, date_format, footer, has_today_btn, id, max_date, min_date, start_date } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div id={id} className='calendar' value={selected_date}>\n                { children }\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    onClick={this.navigators}\n                    onSelect={this.calendarViews}\n                    calendar_view={calendar_view}\n                />\n                <CalendarPanel\n                    calendar_date={calendar_date}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    max_date={max_date}\n                    min_date={min_date}\n                    start_date={start_date}\n                    onClick={this.panelSelectors}\n                    selected_date={selected_date}\n                    calendar_view={calendar_view}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    onClick={this.setToday}\n                    has_today_btn={has_today_btn}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : moment(0).utc().format('YYYY-MM-DD'),              // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : moment().utc().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    children       : PropTypes.object,\n    date_format    : PropTypes.string,\n    footer         : PropTypes.string,\n    has_today_btn  : PropTypes.bool,\n    id             : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    max_date       : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onSelect  : PropTypes.func,\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarFooter({ footer, has_today_btn, onClick }) {\n    return (\n        <div className='calendar-footer'>\n            { footer && <span className='calendar-footer-extra'>{footer}</span> }\n            { has_today_btn &&\n                <CalendarButton className='calendar-footer-btn'>\n                    <a role='button' onClick={onClick}>{localize('Today')}</a>\n                </CalendarButton>\n            }\n        </div>\n    );\n}\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n","import classNames     from 'classnames';\nimport moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarHeader({ calendar_date, isPeriodDisabled, onClick, onSelect, calendar_view }) {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = moment.utc(calendar_date);\n\n    return (\n        <div className='calendar-header'>\n            <CalendarButton\n                className={classNames('calendar-prev-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    (is_date_view || is_month_view) && onClick.previousYear())\n                    || (is_year_view   && onClick.previousDecade())\n                    || (is_decade_view && onClick.previousCentury()\n                    )\n                }\n            />\n            <CalendarButton\n                className={classNames('calendar-prev-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.previousMonth}\n            />\n\n            <div className='calendar-select'>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar-select-month-btn'\n                        is_hidden={!is_date_view}\n                        label={moment_date.format('MMM')}\n                        onClick={onSelect.month}\n                    />\n                }\n                <CalendarButton\n                    className='calendar-select-year-btn'\n                    onClick={() => ((is_date_view || is_month_view) ? onSelect.year() : onSelect.decade())}\n                >\n                    { (is_date_view || is_month_view) && moment_date.year() }\n                    { is_year_view   && `${moment_date.clone().subtract(1, 'years').year()}-${moment_date.clone().add(10, 'years').year()}`  }\n                    { is_decade_view && `${moment_date.clone().subtract(10, 'years').year()}-${moment_date.clone().add(109, 'years').year()}` }\n                </CalendarButton>\n            </div>\n\n            <CalendarButton\n                className={classNames('calendar-next-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.nextMonth}\n            />\n            <CalendarButton\n                className={classNames('calendar-next-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    ((is_date_view || is_month_view) && onClick.nextYear())\n                    || (is_year_view   && onClick.nextDecade())\n                    || (is_decade_view && onClick.nextCentury())\n                )}\n            />\n        </div>\n    );\n}\n\nCalendarHeader.propTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    onClick         : PropTypes.object,\n    onSelect        : PropTypes.object,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nexport default function CalendarPanel(props) {\n    const calendar_panel = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <div className='calendar-panel'>\n            { calendar_panel[props.calendar_view] }\n        </div>\n    );\n}\n\nCalendarPanel.propTypes = {\n    calendar_view: PropTypes.string,\n};\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { padLeft }        from '_common/string_util';\nimport CalendarPanelTypes from './types';\n\nconst getDays = ({ calendar_date, date_format, max_date, min_date, start_date, onClick, selected_date }) => {\n    const dates = [];\n    const days  = [];\n    const moment_today       = moment().utc().startOf('day');\n    const moment_cur_date    = moment.utc(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const first_day          = moment_month_start.day();\n    const last_day           = moment_month_end.day();\n    const moment_min_date    = moment.utc(min_date);\n    const moment_max_date    = moment.utc(max_date);\n    const moment_selected    = moment.utc(selected_date);\n\n    for (let i = first_day; i > 0; i--) {\n        dates.push(moment_month_start.clone().subtract(i, 'day').format(date_format));\n    }\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    for (let i = 1; i <= 6 - last_day; i++) {\n        dates.push(moment_month_end.clone().add(i, 'day').format(date_format));\n    }\n\n    const moment_start_date = moment.unix(start_date).utc().startOf('day');\n    dates.map((date) => {\n        const moment_date = moment.utc(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n        const is_disabled = moment_date.isBefore(moment_min_date) || moment_date.isAfter(moment_max_date) ||\n            // for forward starting accounts, only show same day as start date and the day after\n            (start_date && (moment_date.isBefore(moment_start_date) || moment_date.isAfter(moment_start_date.clone().add(1, 'day'))));\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar-date', {\n                    active  : is_active && !is_disabled,\n                    today   : is_today,\n                    disabled: is_disabled,\n                })}\n                onClick={(e) => { onClick.date(e, is_disabled); }}\n                data-date={date}\n            >\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nconst week_headers = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar-date-panel'>\n            {week_headers.map((item, idx) => (<span key={idx} className='calendar-date-header'>{item}</span>))}\n            {days}\n        </div>\n    );\n};\n\nCalendarDays.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { localize }       from '_common/localize';\nimport CalendarPanelTypes from './types';\n\nconst getMonthHeaders = () => ({\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n});\n\nexport const CalendarMonths = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const moment_date    = moment.utc(calendar_date);\n    const selected_month = moment.utc(selected_date).month();\n    const month_headers  = getMonthHeaders();\n\n    return (\n        <div className='calendar-month-panel'>\n            {Object.keys(month_headers).map((month, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-month', {\n                        active  : idx === selected_month,\n                        disabled: isPeriodDisabled(moment_date.month(month), 'month'),\n                    })}\n                    onClick={onClick.month}\n                    data-month={idx}\n                >\n                    {month_headers[month]}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarYears = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n    const current_year  = moment_date.year();\n    const years         = [];\n    for (let year = current_year - 1; year < current_year + 11; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar-year-panel'>\n            {years.map((year, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-year', {\n                        disabled: isPeriodDisabled(moment_date.year(year), 'year'),\n                        active  : year === selected_year,\n                    })}\n                    onClick={onClick.year}\n                    data-year={year}\n                >\n                    {year}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarDecades = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n\n    const decades = [];\n    let min_year  = moment_date.year() - 10;\n    for (let i = 0; i < 12; i++) {\n        const max_year = min_year + 9;\n        const range    = `${min_year}-${max_year}`;\n        decades.push(range);\n        min_year = max_year + 1;\n    }\n\n    return (\n        <div className='calendar-decade-panel'>\n            {decades.map((range, idx) => {\n                const [start_year, end_year] = range.split('-');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar-decade', {\n                            disabled: isPeriodDisabled(moment_date.year(start_year), 'year') && isPeriodDisabled(moment_date.year(end_year), 'year'),\n                            active  : start_year === selected_year,\n                        })}\n                        onClick={onClick.decade}\n                        data-decade={range}\n                    >\n                        {range}\n                    </span>\n                );\n            })}\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CalendarPanelTypes };\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Dropdown     from 'App/Components/Form/DropDown';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\n\nconst last_digit_numbers = [...Array(10).keys()].map(number => ({\n    text : number,\n    value: number,\n}));\n\nconst LastDigit = ({\n    is_minimized,\n    is_nativepicker,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Last Digit Prediction')}\n            icon='digits'\n        >\n            <Dropdown\n                list={last_digit_numbers}\n                value={+last_digit}\n                name='last_digit'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    last_digit     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\n\n/* TODO:\n    1. update sessions list when the selected one doesn’t have any enabled time\n*/\n\nconst StartDate = ({\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    sessions,\n    start_date,\n    start_dates_list,\n    start_time,\n}) => {\n    // Number(0) refers to 'now'\n    const is_today = start_date === Number(0);\n    let current_date_config = '';\n    if (!is_today) {\n        current_date_config = start_dates_list.find(o => o.value === +start_date) || {};\n    }\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized start-date'>\n                <span className='icon start-time' />\n                {is_today ? localize('Now') : `${current_date_config.text}\\n${start_time}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Start time')}\n            icon='start-time'\n        >\n            <Dropdown\n                name='start_date'\n                value={start_date}\n                list={start_dates_list}\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n            {!is_today &&\n                <React.Fragment>\n                    <TimePicker\n                        onChange={onChange}\n                        is_align_right\n                        name='start_time'\n                        value={start_time}\n                        placeholder='12:00'\n                        start_date={start_date}\n                        sessions={sessions}\n                        is_clearable={false}\n                        is_nativepicker={is_nativepicker}\n                    />\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nStartDate.propTypes = {\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    onChange       : PropTypes.func,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_dates_list: MobxPropTypes.arrayOrObservableArray,\n    start_time      : PropTypes.string,\n};\n\nexport default observer(StartDate);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-wrapper'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\n\nconst ErrorComponent = ({ type, message }) => (\n    <div className='error-container'>\n        <IconError type={type} />\n        <p>{message || localize('Sorry, an error occured while processing your request.')}</p>\n    </div>\n);\n\nErrorComponent.propTypes = {\n    message: PropTypes.string,\n    type   : PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import React from 'react';\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const wrapper   = replacers[pair_code];\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport CloseButton from './close_button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }        from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                <span className={`toast__body__icon--${data.type.toLowerCase()}`} />\n            </div>\n            <div className='toast__body__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__body__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({ children, is_portfolio_drawer_on }) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-portfolio-drawer': is_portfolio_drawer_on,\n        })}\n    >\n        {children}\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_portfolio_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePortfolio,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_logged_in,\n    is_portfolio_drawer_on,\n    is_language_dialog_visible,\n    is_settings_dialog_on,\n    network_status,\n    toggleSettingsDialog,\n    togglePortfolioDrawer,\n}) => (\n    <React.Fragment>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            {\n                is_logged_in &&\n                <TogglePortfolio\n                    is_portfolio_drawer_on={is_portfolio_drawer_on}\n                    togglePortfolioDrawer={togglePortfolioDrawer}\n                />\n            }\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_settings_visible={is_settings_dialog_on}\n                is_language_visible={is_language_dialog_visible}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePortfolioDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        network_status            : common.network_status,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_portfolio.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentWillMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconQuickPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 12'>\n        <path className='color1-fill color3-fill' fill='#2A3052' fillRule='evenodd' d='M1 0h14c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1H1a1 1 0 0 1-1-1V1c0-.6.4-1 1-1zm0 1v10h5V1H1zm6 0v10h8V1H7zm1.5 1.5a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconQuickPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuickPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames             from 'classnames';\nimport PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { IconQuickPortfolio } from 'Assets/Footer';\n\nconst TogglePortfolio = ({\n    is_portfolio_drawer_on,\n    togglePortfolioDrawer,\n}) => {\n    const toggle_portfolio_class = classNames('ic-portfolio', {\n        'active': is_portfolio_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_portfolio_class}\n            onClick={togglePortfolioDrawer}\n        >\n            <IconQuickPortfolio className='footer-icon' />\n        </a>\n    );\n};\n\nTogglePortfolio.propTypes = {\n    is_portfolio_drawer_on: PropTypes.bool,\n    togglePortfolioDrawer : PropTypes.func,\n};\n\nexport { TogglePortfolio };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { withRouter }           from 'react-router';\nimport { formatMoney }          from '_common/base/currency_base';\nimport { connect }              from 'Stores/connect';\nimport {\n    AccountInfo,\n    LoginButton,\n    InstallPWAButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    ToggleNotificationsDrawer } from '../../Components/Layout/Header';\nimport header_links             from '../../Constants/header_links';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-balance-container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                            </React.Fragment>\n                            :\n                            <LoginButton />\n                        }\n                    </div>\n                </div>\n                <ToggleNotificationsDrawer />\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool, // TODO: add dark theme handler\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func, // TODO: add click handler\n    pwa_prompt_event         : PropTypes.object,\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ ui, client }) => ({\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account_info.jsx';\nexport * from './install_pwa_button.jsx';\nexport * from './login_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { IconArrow }       from 'Assets/Common';\nimport Client              from '_common/base/client_base';\nimport { localize }        from '_common/localize';\nimport { AccountSwitcher } from '../../Elements/AccountSwitcher';\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    onClickUpgrade,\n    toggleDialog,\n}) => {\n    const is_demo       = (Client.get('is_virtual', loginid));\n    const account_title = Client.getAccountTitle(loginid);\n    const account_type  = !(is_demo) && currency ? account_title : localize('Demo');\n\n    return (\n        <div className='acc-balance'>\n            <div className='acc-switcher-container'>\n                <div className={classNames('acc-info', { 'show': is_dialog_on })} onClick={toggleDialog}>\n                    <p className='acc-balance-type'>{localize('[_1] Account', [(account_type || '')])}</p>\n                    <p className='acc-balance-id'>{loginid}</p>\n                    <IconArrow className='select-arrow' />\n                </div>\n                <CSSTransition\n                    in={is_dialog_on}\n                    timeout={400}\n                    classNames='acc-switcher-wrapper'\n                    unmountOnExit\n                >\n                    <div className='acc-switcher-wrapper'>\n                        <AccountSwitcher\n                            is_visible={is_dialog_on}\n                            toggle={toggleDialog}\n                            is_upgrade_enabled={is_upgrade_enabled}\n                            onClickUpgrade={onClickUpgrade}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n            { typeof balance !== 'undefined' &&\n                <p className='acc-balance-amount'>\n                    <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                    {balance}\n                </p>\n            }\n        </div>\n    );\n};\n\nAccountInfo.propTypes = {\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account_switcher.jsx';\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Client            from '_common/base/client_base';\nimport { localize }      from '_common/localize';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services';\nimport { switchAccount } from 'Services/Helpers/switch_account';\nimport { UpgradeButton } from './upgrade_button.jsx';\n\nconst getAccountInfo = (loginid) => {\n    const currency     = Client.get('currency', loginid);\n    const is_virtual   = Client.get('is_virtual', loginid);\n    const account_type = !is_virtual && currency ? currency : Client.getAccountTitle(loginid);\n\n    return {\n        loginid,\n        is_virtual,\n        icon : account_type.toLowerCase(), // TODO: display the icon\n        title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n    };\n};\n\nconst makeAccountsList = () => Client.getAllLoginids().map(loginid => (\n    loginid !== Client.get('loginid') &&\n    !Client.get('is_disabled', loginid) &&\n    Client.get('token', loginid) ?\n        getAccountInfo(loginid) :\n        undefined\n)).filter(account => account);\n\nclass AccountSwitcher extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            accounts_list: makeAccountsList(),\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    doSwitch(loginid) {\n        this.props.toggle();\n        switchAccount(loginid);\n    }\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    render() {\n        if (!Client.isLoggedIn()) return false;\n\n        return (\n            <div className='acc-switcher-list' ref={this.setWrapperRef}>\n                {(this.state.accounts_list.length > 0) &&\n                this.state.accounts_list.map((account) => (\n                    <React.Fragment key={account.loginid}>\n                        <div\n                            className={classNames('acc-switcher-account', account.icon)}\n                            onClick={() => this.doSwitch(account.loginid)}\n                        >\n                            <span className='acc-switcher-id'>{account.loginid}</span>\n                            <span className='acc-switcher-type'>{account.title}</span>\n                        </div>\n                    </React.Fragment>\n                ))}\n                {this.props.is_upgrade_enabled &&\n                <div className='acc-button'>\n                    <UpgradeButton onClick={this.props.onClickUpgrade} />\n                </div>\n                }\n                <div className='acc-logout' onClick={requestLogout}>\n                    <span className='acc-logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    is_upgrade_enabled: PropTypes.bool,\n    is_visible        : PropTypes.bool,\n    onClickUpgrade    : PropTypes.func,\n    toggle            : PropTypes.func,\n};\n\nexport { AccountSwitcher };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className='primary orange'\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport InkBarDiv      from '../../Elements/InkBar';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <InkBarDiv className='menu-links'>\n            {items.map((item, idx) => (\n                <BinaryLink key={idx} to={item.link_to}>\n                    <span title={item.text}>{item.icon}{item.text}</span>\n                </BinaryLink>\n            ))}\n        </InkBarDiv>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","export default from './inkbar_div.jsx';\nexport *       from './inkbar.jsx';\n","import classnames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { InkBar } from './inkbar.jsx';\n\nclass InkBarDiv extends React.Component {\n    constructor(props) {\n        super(props);\n        window.addEventListener('resize', this.updateInkbarPosition);\n        this.state = {\n            left : 0,\n            width: 0,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.node) return;\n        this.updateInkbarPosition(this.node.querySelector('a[class=\"active\"]'));\n    }\n\n    componentDidUpdate() {\n        const active_el = this.node.querySelector('a[class=\"active\"]');\n        if (active_el) {\n            this.updateInkbarPosition(active_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.clearInkBar(); // clear InkBar when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        window.removeEventListener('resize', this.updateInkbarPosition);\n        this.clearInkBar();\n    }\n\n    onClick = (e) => {\n        if (!e.target) return;\n        this.updateInkbarPosition(e.target.closest('a'));\n    };\n\n    clearInkBar = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateInkbarPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('has-inkbar', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: this.onClick,\n                        })\n                    ))\n                }\n                <InkBar left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nInkBarDiv.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n};\n\nexport default InkBarDiv;\n","import React              from 'react';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\nimport getRoutesConfig    from '../../Constants/routes_config';\n\nconst BinaryRoutes = () => (\n    <React.Suspense fallback={<div> Loading... </div>}>\n        {\n            getRoutesConfig().map((route, idx) => (\n                <RouteWithSubRoutes key={idx} {...route} />\n            ))\n        }\n    </React.Suspense>\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <ToggleButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Client            from '_common/base/client_base';\nimport { localize }      from '_common/localize';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\nimport {\n    DrawerItem,\n    DrawerToggle }       from '../../Components/Elements/Drawer';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_mobile,\n    is_portfolio_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePortfolioDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            { is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        { !!(Client.isLoggedIn() && is_mobile) &&\n            <div className='drawer-footer'>\n                <DrawerItem\n                    icon={<IconLogout className='drawer-icon' />}\n                    text={localize('Logout')}\n                    custom_action={() => {\n                        if (is_portfolio_drawer_on) {\n                            togglePortfolioDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                        }\n                        requestLogout();\n                    }}\n                />\n            </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePortfolioDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconBell }        from 'Assets/Header/NavBar';\nimport { DrawerItem }      from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <div className='no-notifications-container'>\n                    <div className='notification-message'>\n                        <div className='bell-icon'>\n                            <IconBell />\n                        </div>\n                        <div>\n                            <h4>{localize('No Notifications')}</h4>\n                            <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n                        </div>\n                    </div>\n                </div>\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    'list': PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconPortfolio,\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        icon   : <IconPortfolio className='ic-header__portfolio' />,\n        text   : localize('Portfolio'),\n        link_to: routes.portfolio,\n    },\n    {\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Statement'),\n        link_to: routes.statement,\n    },\n    // { icon: <IconCashier />,   text: localize('Cashier') },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst ThemeWrapper = ({ children, is_dark_theme }) => {\n    const theme_wrapper_class = classNames('theme-wrapper', {\n        dark : is_dark_theme,\n        light: !is_dark_theme,\n    });\n    return (\n        <div id='theme_wrapper' className={theme_wrapper_class}>\n            {children}\n        </div>\n    );\n};\n\nThemeWrapper.propTypes = {\n    children     : PropTypes.node,\n    is_dark_theme: PropTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_dark_theme: ui.is_dark_mode_on,\n    }),\n)(ThemeWrapper));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport { connect }                    from 'Stores/connect';\nimport ErrorComponent                 from '../../Components/Elements/Errors';\nimport BinaryRoutes                   from '../../Components/Routes';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes />;\n};\n\nRoutes.propTypes = {\n    error    : MobxPropTypes.objectOrObservableObject,\n    has_error: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ common }) => ({\n        error    : common.error,\n        has_error: common.has_error,\n    })\n)(Routes));\n","export default from './denial_of_service.jsx';\n","import React                from 'react';\nimport PropTypes            from 'prop-types';\nimport { getAccountOfType } from '_common/base/client_base';\nimport { localize }         from '_common/localize';\nimport URL                  from '_common/url';\nimport FullPageModal        from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport Localize             from 'App/Components/Elements/localize.jsx';\nimport { switchAccount }    from 'Services/Helpers/switch_account';\n\nconst onConfirm = () => {\n    switchAccount(getAccountOfType('virtual').loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    is_visible: PropTypes.bool,\n};\nexport default DenialOfServiceModal;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{children}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    body               : PropTypes.string,\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register_service_worker';\nexport { unregister } from './register_service_worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const swUrl = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(swUrl)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}