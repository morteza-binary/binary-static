{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/App/Middlewares/is_client_allowed_to_visit.js","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/time_picker.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/toggle_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/Services/Helpers/switch_account.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/subscription_manager.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/outdated_browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/currency.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer_card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker_input.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_panel.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/start_date.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close_button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast_message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_quick_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_portfolio.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/upgrade_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install_pwa_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar_div.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Containers/Layout/theme_wrapper.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register_service_worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","portfolio.empty_message","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_logout","forEach","BinarySocketGeneral","WS","_icon_arrow","_icon_back","_icon_close","_icon_exclamation","Button","_ref$className","className","has_effect","id","is_disabled","onClick","text","wrapperClassName","classes","button","_react2","default","disabled","wrapper","string","bool","func","_mobx","_utility","BaseStore","options","_initDefineProp","_descriptor","_descriptor2","root_store","local_storage_properties","session_storage_properties","validation_rules","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","freeze","observable","action","_date_time","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","_icon_bell","_icon_cashier","_icon_hamburger","_icon_portfolio","_icon_statement","_icon_trade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","isProduction","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_localize","_Services","_barrier","_duration","_start_date","_contract","ContractType","available_contract_types","available_categories","contract_types","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","_time$split","split","_time$split2","_slicedToArray","moment","utc","isNaN","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","symbol","contractsFor","then","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getExpiryDate","expiry_date","moment_start","moment_expiry","isBefore","isAfter","clone","add","getExpiryTime","start_time","expiry_time","_moment2","end_moment","end_time","isSameOrBefore","is_end_of_day","is_end_of_session","getSessions","option","getStartTime","getContractCategories","contract_types_list","Fieldset","header","icon","onMouseEnter","onMouseLeave","tooltip","field_left_class","_classnames2","_tooltip2","alignment","message","array","apps","exclusion","financial","history","index","personal","root","token","trade","Tooltip","icon_name","icon_class","data-tooltip","data-tooltip-pos","node","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","duration","unit","max","duration_maps","u","sort","b","from_unit","to_unit","duration_string","match","getExpiryType","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","floor","day","CalendarPanelTypes","calendar_date","calendar_view","date_format","isPeriodDisabled","max_date","min_date","selected_date","_drawer_header","_drawer_item","_drawer_items","_drawer","_drawer_toggle","_toggle_drawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","some","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","date_expiry","date_start","payout","theme","is_dark_mode_on","portfolio_drawer","is_portfolio_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","granularity","pushDataLayer","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","viewBox","fill","fillRule","color","getContractTypeDisplay","ASIANU","ASIAND","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","getChartConfig","contract_info","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","_icon_trade_types","UILoader","loading_class","cx","cy","strokeWidth","strokeMiterlimit","InputField","error_messages","fractional_digits","helper","is_float","_ref$is_signed","is_signed","label","max_length","onChange","placeholder","prefix","required","has_error","has_valid_length","input","data-for","data-tip","maxLength","is_empty","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","htmlFor","MobxPropTypes","arrayOrObservableArray","_fill_template","Localize","str","replacers","localized","fillTemplate","_icon_maximize","_icon_quick_portfolio","_icon_settings","_helpers","BinaryLink","RouteWithSubRoutes","_connect","_Date","RemainingTime","_ref$end_time","unix","remaining_time","formatDuration","getDiffDuration","isRequired","_ref2","_ui","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","spot","digit","is_win","isWin","is_last","win_checker","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","open","close","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","allowed_query_string_variables","non_proposal_query_string_variable","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","isClientAllowedToVisit","isLoggedIn","IconClose","_reactRouterDom","to","_objectWithoutProperties","_routes_config2","NavLink","activeClassName","exact","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","component","Redirect","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contract_type_widget2","_icon_trade_categories","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","_PopConfirm","_is_client_allowed_to_visit","Purchase","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","idx","info","purchase_button","_button2","stake","is_purchase_error","echo_req","_fieldset2","_PurchaseLock2","_MessageBox2","_ui_loader2","_contract_info2","contract_title","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","renderCards","_ref3","CalendarButton","is_hidden","TimePickerDropdown","selectOption","_this$props$value$spl","_this$props$value$spl2","prev_hour","prev_minute","is_type_selected","setState","last_updated_type","stopPropagation","resetValues","state","is_hour_selected","is_minute_selected","prevProps","prevState","_state","toggle","_props","preClass","start_moment_clone","_value$split","_value$split2","is_clearable","saveHourRef","is_enabled","saveMinuteRef","mm","TimePicker","toggleDropDown","is_open","handleChange","arg","saveRef","nodeName","wrapper_ref","target_element","handleClickOutside","contains","_props2","is_align_right","padding","prefix_class","readOnly","value_split","InfoBoxExpired","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","sell_info","profit_percentage","percentage_text","transaction_id","_sell_info2","_icon_flag2","_money2","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabs_item","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","_toggle_button2","toggled","ToggleButton","toggle_style","_icon_logout","switchAccount","setLoginFlag","InkBar","inkbar_style","_login","_app_config","Route","render","_login_prompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","nextProps","is_main_drawer_on","is_notifications_drawer_on","drawer_bg_class","show","drawer_class","CSSTransition","in","classNames","unmountOnExit","footer","icon_link","drawer_component","_Types","ContractTypeCell","IconTradeType","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","_details_header2","display_status","_details_contents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_InfoBox","InfoBox","is_trade_page","removeError","is_ended","box_class","ended","Contents","InfoBoxGeneral","InfoBoxDigit","_contract_error2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","subscriptions","forget_requested","subscription_id","dispatch","sub_id","stream_id","sub_info","subscribers","fnc","forgetStream","fncCallback","forgets_list","hasCallbackFunction","hasValues","request_obj","values_obj","every","isDeepEqual","callback","msg_types","types_to_forget","sub_ids","forget_all","client_store","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","isValidLoginid","ResponseHandlers","websiteStatus","ServerTime","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setBalance","setResidence","country","sendBuffered","country_code","email","flow","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","wait","stop","setError","is_available","site_status","availability","setCurrencies","showError","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","getBasicUpgradeInfo","upgrade_info","can_upgrade","can_open_multi","_declarative_validation_rules","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","val","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","_Language","bound","is_socket_opened","currentLanguage","getAllowedLanguages","exclude_languages","getAll","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chart_barriers","_chart_markers","_details","chart_config","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","getDetailsExpiry","getDetailsInfo","computed","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","x","y","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","align","_icon_entry_spot2","IconEntrySpot","oneOf","entry_spot","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","toMoment","epoch","convertToUnix","moment_obj","setTime","formatDate","daysFromTodayTo","diff","asDays","seconds","formatted_str","_format_response","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","underlying","display_name","unshift","findIndex","initializePortfolio","clearTable","purchase","portfolio_pos","server_epoch","active_positions","portfolioHandler","transactionHandler","parseFloat","details","_chart_barrier_store","_chart_marker_store","_chart","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","wsSubscribe","wsForget","wsSendRequest","timePromise","tick_chart_types","is_contract_mode","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","subtract","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","time_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_query_string","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validation_rules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","chart_id","debouncedProposal","_lodash2","_descriptor33","proposal_requests","processNewValuesAsync","changeDurationValidationRules","query_string_values","updateQueryString","addToastMessage","setQueryParam","pickDefaultSymbol","_asyncToGenerator","_e$target","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","isCryptocurrency","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","values","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","getProposalInfo","setChartBarrier","query_params","param","duration_options","prepareTradeStore","runInAction","_callee5","_context5","query_string","URL","search","URLSearchParams","url_object","param_object","delete","append","replaceState","set_query_string","getQueryParams","abrupt","_x","_x2","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","_proposal_response$ec","Currency","Duration","StartDate","currencies_list","t0","extendOrReplace","t1","getCurrenciesAsync","t2","sent","getMethodsList","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","source","new_values","_currency","default_currency","buildCurrenciesList","getDefaultCurrency","fiat","crypto","supported_currencies","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_date","obj_expiry_time","obj_duration_min_max","ask_price","returns","toFixed","display_value","new_req","createProposalRequestForContract","current_req","type_of_contract","obj_expiry","isSame","parseInt","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_base_name2","_theme_wrapper2","_header2","_error_boundary2","_app_contents2","_routes2","_PortfolioDrawer2","_toast_message2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","EmptyPortfolioMessage","PortfolioDrawer","toggleDrawer","body_content","_portfolio_drawer_card2","Suspense","fallback","portfolio-drawer--open","_simplebarReact2","togglePortfolioDrawer","IconArrow","IconBack","transform","PortfolioDrawerCard","_binary_link2","_contract_type_cell2","_remaining_time2","IconType","rx","stroke","strokeLinecap","IconBell","IconCashier","IconHamburger","IconTrade","SmartChart","form_wrapper_class","_info_box2","onSymbolChange","updateChartType","updateGranularity","_test2","_form_layout2","is_contract_visible","_contract_details2","Test","setVisibility","stateVisibility","styles","container","fontSize","lineHeight","zIndex","background","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","entries","v","_ref4","FormLayout","_screen_small2","_screen_large2","ScreenLarge","sidebar-items__slideout","_contract_type2","_trade_params2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","setWrapperRef","is_dialog_open","getDisplayText","_this$props","findInArray","getStyles","container_classes","tabIndex","IconTradeCategory","category","_contract_type_dialog2","_contract_type_list2","IconCategory","ContractTypeDialog","_full_screen_dialog2","element","ContractTypeList","_contract_type_item2","objectOrObservableObject","ContractTypeItem","_popconfirm","_popconfirm_element","handleClose","handleOpen","popconfirm_element","cloneElement","ContractInfo","icon_type","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchase_result2","PurchaseResult","_error_balance","_error_general","_error_login","_icon_lock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","has_currency","amount_container_class","three-columns","_DropDown2","_input_field2","Dropdown","onKeyPressed","getItemFromValue","getValueFromIndex","curr_index","is_list_visible","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","onKeyDown","isArrayLike","Items","highlightedIdx","items","expiry_list","now_date","min_date_duration","max_date_duration","min_date_expiry","min_day","max_day","start_date_time","moment_now","new_min_day","new_max_day","moment_today","startOf","is_same_day","date_time","_start_time$split","_start_time$split2","moment_start_date_time","duration_unit_text","datepicker_footer","has_end_time","expiry","pop","endtime_container_class","has-time","_DatePicker2","is_read_only","has_today_btn","_time_picker2","DatePicker","is_datepicker_visible","is_close_btn_visible","onClickOutside","mainNode","updateDatePickerValue","onSelectCalendar","isValid","onChangeInput","clearDatePickerInput","calendar","resetCalendar","new_date","current_date","_this$props2","nativeEvent","defaultValue","_date_picker_input2","class_name","_Calendar2","onSelect","defaultProps","Calendar","DatePickerInput","_initialiseProps","_calendar_header2","navigators","calendarViews","_calendar_panel2","panelSelectors","_calendar_footer2","setToday","nextMonth","navigateTo","previousMonth","nextYear","previousYear","nextDecade","previousDecade","nextCentury","previousCentury","updateSelectedDate","month","updateSelected","year","decade","is_add","_props3","moment_date","dataset","is_before","is_after","formatted_date","_props4","default_date","_props5","now","_props6","start_of_period","endOf","CalendarFooter","_calendar_button2","role","CalendarHeader","is_date_view","is_month_view","is_year_view","is_decade_view","CalendarPanel","_panels","calendar_panel","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendar_days","_calendar_months","_calendar_years","_calendar_decades","week_headers","days","dates","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","first_day","last_day","moment_min_date","moment_max_date","moment_selected","padLeft","moment_start_date","is_active","is_today","today","data-date","getDays","selected_month","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","data-month","selected_year","current_year","years","data-year","decades","min_year","max_year","range","_range$split","_range$split2","start_year","end_year","data-decade","last_digit_numbers","current_date_config","getOwnPropertyNames","acc","prop","getPropFromStores","_len2","ScreenSmall","_mobile_widget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_details_group2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_icon_tick2","won","lost","IconTick","circle_color","tick_color","_icon_error2","ContractError","_ref$message","digits_array","tick_count","latest_digit","display_array","last_item","_digit_display2","digit_info","digit_number","_info_box_expired2","DigitDisplay","_ref$digit_info","digit_class","last","SellInfo","_localize3","open_tag_id","tag","tag_id","before","pair_code","isValidElement","arr","is_started","_contract_sell2","onClickSell","ContractSell","_sell_button2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","_close_button2","shape","CloseButton","ToastMessage","toast","_ToastMessage2","arrayOf","AppContents","app-contents--show-portfolio-drawer","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","NetworkStatus","_server_time2","TogglePortfolio","ToggleFullScreen","ToggleSettings","is_settings_visible","is_language_visible","toggleSettings","gmt_time","_network_status","_toggle_fullscreen","_toggle_portfolio","_toggle_settings","class","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","IconMaximize","IconQuickPortfolio","IconSettings","toggle_portfolio_class","toggle_settings_class","_settings_dialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings_dialog_container_class","Tabs","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabs_wrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settings_control2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_language_dialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","LoginButton","ToggleNotificationsDrawer","_account_info","_install_pwa_button","_login_button","_menu_links","_toggle_menu_drawer","_toggle_notifications_drawer","_AccountSwitcher","is_demo","account_title","getAccountTitle","account_type","AccountSwitcher","_account_switcher","_Drawer","_switch_account","_upgrade_button","makeAccountsList","getAllLoginids","is_virtual","getAccountInfo","account","accounts_toggle_btn","accounts_list","doSwitch","UpgradeButton","IconLogout","prompt","userChoice","choice_result","outcome","_InkBar2","_inkbar","InkBarDiv","updateInkbarPosition","closest","clearInkBar","offsetLeft","offsetWidth","active_el","other_props","_route_with_sub_routes2","LoginPrompt","onSignup","_localize2","1_2","3_2","website_name","ToggleDrawer","_menu_drawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","Notifications","_notifications","ThemeWrapper","is_dark_theme","theme_wrapper_class","dark","light","Routes","_Routes2","_client_base","getAccountOfType","onCancel","DenialOfServiceModal","_full_page_modal2","confirm_button_text","cancel_button_text","FullPageModal","unregister","navigator","path_name","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"portfolio.empty_message\":\"portfolio.empty_message\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \".min.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/audit/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([280,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = `btn${has_effect ? ' effect' : ''} ${className}`;\n    const button = (\n        <button id={id} className={classes} onClick={onClick || undefined} disabled={is_disabled}>\n            <span>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.object,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        this.root_store = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {}\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties));\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.constructor.name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.constructor.name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(localStorage.getItem(this.constructor.name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.constructor.name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}){\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules){\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger = this.validation_rules[property].trigger;\n        const inputs = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n}\n\n","export * from './date_time';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={`symbols ${currency.toLowerCase()}`} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import moment                    from 'moment';\nimport { localize }              from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }           from '_common/utility';\nimport { WS }                    from 'Services';\nimport { buildBarriersConfig }   from './barrier';\nimport { buildDurationConfig }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }         from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }          from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = time.split(':');\n        return moment.utc(isNaN(date) ? date : +date * 1000).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: getValidTime(sessions, buildMoment(start_date, start_time)),\n    });\n\n    const getExpiryDate = (expiry_date, start_date) => {\n        const moment_start  = moment.utc(start_date ? start_date * 1000 : undefined);\n        const moment_expiry = moment.utc(expiry_date || undefined);\n        // forward starting contracts should only show today and tomorrow as expiry date\n        const is_invalid = moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n        return {\n            expiry_date: (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD'),\n        };\n    };\n\n    // has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is after start time\n    const getExpiryTime = (sessions, start_date, start_time, expiry_date, expiry_time) => {\n        const start_moment = start_date ? buildMoment(start_date, start_time) : moment().utc();\n        const end_moment   = buildMoment(expiry_date, expiry_time);\n\n        let end_time = expiry_time;\n        if (sessions && !isSessionAvailable(sessions, end_moment)) {\n            end_time = getValidTime(sessions, end_moment, start_moment);\n        }\n        if (end_moment.isSameOrBefore(start_moment)) {\n            const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n            const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n            end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n        }\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getExpiryDate,\n        getExpiryTime,\n        getSessions,\n        getStartTime,\n        getStartType,\n\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Tooltip    from '../Elements/tooltip.jsx';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    icon,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n}) => {\n    const field_left_class = classNames('field-info left', { icon }, icon);\n\n    return (\n        <fieldset className={className}  onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className='fieldset-header'>\n                    <span className={field_left_class}>{header}</span>\n                </div>\n            }\n            {!!tooltip &&\n                <span className='field-info right'>\n                    <Tooltip\n                        alignment='left'\n                        icon='info'\n                        message={tooltip || 'Message goes here.'}\n                    />\n                </span>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    icon        : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    tooltip     : PropTypes.string,\n};\n\nexport default Fieldset;\n","const routes = {\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    message,\n    alignment,\n    children,\n    icon, // only question or info accepted\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className='tooltip' data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={icon_class} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.node,\n    icon     : PropTypes.string,\n    message  : PropTypes.string,\n};\n\nexport default Tooltip;\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && moment.utc(expiry_date).isAfter(moment(server_time).utc(), 'day');\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n","export default from './dropdown.jsx';\n","import PropTypes from 'prop-types';\n\nexport const CalendarPanelTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    date_format     : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    max_date        : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onClick      : PropTypes.object,\n    selected_date: PropTypes.string,\n};\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","import BinarySocket        from '_common/base/socket_base';\nimport { isEmptyObject }   from '_common/utility';\nimport SubscriptionManager from './subscription_manager';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                portfolio_drawer: root_store.ui.is_portfolio_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","export * from './icon_trade_types.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className }) => {\n    const loading_class = classNames('loading', className);\n    return (\n        <div className='block-ui'>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default UILoader;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    className,\n    error_messages,\n    fractional_digits,\n    helper,\n    is_disabled,\n    is_float,\n    is_signed = false,\n    label,\n    max_length,\n    name,\n    onChange,\n    placeholder,\n    prefix,\n    required,\n    type,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n\n    const changeValue = (e) => {\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '';\n            const signed_regex = is_signed ? '(?!^([-+]0)$|^[-+]?$)^[+-]?' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const input =\n        <input\n            className={classNames({ error: has_error })}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-tip\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onChange={changeValue}\n            placeholder={placeholder || undefined}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={value}\n        />;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <i><span className={`symbols ${prefix.toLowerCase()}`} /></i>\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                { input }\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    className        : PropTypes.string,\n    error_messages   : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits: PropTypes.number,\n    helper           : PropTypes.bool,\n    is_disabled      : PropTypes.string,\n    is_float         : PropTypes.bool,\n    is_signed        : PropTypes.bool,\n    label            : PropTypes.string,\n    max_length       : PropTypes.number,\n    name             : PropTypes.string,\n    onChange         : PropTypes.func,\n    placeholder      : PropTypes.string,\n    prefix           : PropTypes.string,\n    required         : PropTypes.bool,\n    type             : PropTypes.string,\n    value            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","export * from './icon_maximize.jsx';\nexport * from './icon_quick_portfolio.jsx';\nexport * from './icon_settings.jsx';\n","export BinaryLink         from './binary_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","export default from './error_component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import moment from 'moment';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === option.date);\n            const current_session   = { open: moment.unix(option.open).utc(), close: moment.unix(option.close).utc() };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : moment.unix(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : option.date,\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = moment.utc(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = moment.utc(),\n    start_moment           = moment.utc(),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, undefined, should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(should_only_check_hour ? session.open.clone().minute(0) : session.open, session.close, null, '[]')))\n);\n","// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'last_digit',\n    'start_date',\n    'symbol',\n];\n\nexport const non_proposal_query_string_variable = [\n    'contract_start_type',\n    'expiry_type',\n];\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import Client from '_common/base/client_base';\n\nexport const isClientAllowedToVisit = () => !Client.isLoggedIn() || Client.get('is_virtual') ||\n    Client.get('landing_company_shortcode') === 'costarica';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import React           from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = React.lazy(() => import(/* webpackChunkName: \"contract\" */ 'Modules/Contract'));\nconst Portfolio       = React.lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = React.lazy(() => import(/* webpackChunkName: \"settings\" */ 'Modules/settings/settings.jsx'));\nconst Statement       = React.lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = React.lazy(() => import(/* webpackChunkName: \"account_password\" */ 'Modules/settings/sections/account_password.jsx'));\nconst ApiToken               = React.lazy(() => import(/* webpackChunkName: \"api_toke\" */ 'Modules/settings/sections/api_token.jsx'));\nconst AuthorizedApplications = React.lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized_applications.jsx'));\nconst CashierPassword        = React.lazy(() => import(/* webpackChunkName: \"cashier_password\" */ 'Modules/settings/sections/cashier_password.jsx'));\nconst FinancialAssessment    = React.lazy(() => import(/* webpackChunkName: \"financial_assessment\" */ 'Modules/settings/sections/financial_assessment.jsx'));\nconst Limits                 = React.lazy(() => import(/* webpackChunkName: \"limits\" */ 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = React.lazy(() => import(/* webpackChunkName: \"login_history\" */ 'Modules/settings/sections/login_history.jsx'));\nconst PersonalDetails        = React.lazy(() => import(/* webpackChunkName: \"personal_details\" */ 'Modules/settings/sections/personal_details.jsx'));\nconst SelfExclusion          = React.lazy(() => import(/* webpackChunkName: \"self_exclusion\" */ 'Modules/settings/sections/self_exclusion.jsx'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n]);\n\nlet routes_config;\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon_trade_categories.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className='contracts-modal-list'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children: PropTypes.any,\n    onClose : PropTypes.func,\n    title   : PropTypes.string,\n    visible : PropTypes.bool,\n};\n\nexport default FullScreenDialog;\n","import PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from '_common/localize';\nimport { isEmptyObject }          from '_common/utility';\nimport { PopConfirm }             from 'App/Components/Elements/PopConfirm';\nimport UILoader                   from 'App/Components/Elements/ui_loader.jsx';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Fieldset                   from 'App/Components/Form/fieldset.jsx';\nimport { connect }                from 'Stores/connect';\nimport { isClientAllowedToVisit } from 'App/Middlewares/is_client_allowed_to_visit';\nimport ContractInfo               from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox                 from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock               from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    barrier_count,\n    currency,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !isClientAllowedToVisit();\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary green'\n                has_effect\n                text={localize('Purchase')}\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n                wrapperClassName='submit-section'\n            />\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='purchase-option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader />\n                        }\n                        <ContractInfo\n                            barrier_count={barrier_count}\n                            contract_title={trade_types[type]}\n                            contract_type={type}\n                            currency={currency}\n                            proposal_info={info}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    barrier_count         : PropTypes.number,\n    currency              : PropTypes.string,\n    is_purchase_confirm_on: PropTypes.bool,\n    is_purchase_enabled   : PropTypes.bool,\n    is_purchase_locked    : PropTypes.bool,\n    is_trade_enabled      : PropTypes.bool,\n    onClickPurchase       : PropTypes.func,\n    onHoverPurchase       : PropTypes.func,\n    proposal_info         : PropTypes.object,\n    purchase_info         : PropTypes.object,\n    resetPurchase         : PropTypes.func,\n    togglePurchaseLock    : PropTypes.func,\n    trade_types           : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        barrier_count         : modules.trade.barrier_count,\n        currency              : modules.trade.currency,\n        is_purchase_enabled   : modules.trade.is_purchase_enabled,\n        is_trade_enabled      : modules.trade.is_trade_enabled,\n        onClickPurchase       : modules.trade.onPurchase,\n        onHoverPurchase       : modules.trade.onHoverPurchase,\n        resetPurchase         : modules.trade.requestProposal,\n        proposal_info         : modules.trade.proposal_info,\n        purchase_info         : modules.trade.purchase_info,\n        trade_types           : modules.trade.trade_types,\n        is_purchase_confirm_on: ui.is_purchase_confirm_on,\n        is_purchase_locked    : ui.is_purchase_lock_on,\n        togglePurchaseLock    : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ common, modules }) => ({\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n    })\n)(TradeParams);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nexport default function CalendarButton({ children, className, is_hidden, label, onClick }) {\n    return (\n        <React.Fragment>\n            { !is_hidden &&\n                <span\n                    type='button'\n                    className={className}\n                    onClick={onClick}\n                >\n                    {label}\n                    {children}\n                </span>\n            }\n        </React.Fragment>\n    );\n}\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n","import {\n    observer,\n    PropTypes as MobxPropTypes }      from 'mobx-react';\nimport moment                         from 'moment';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { localize }                   from '_common/localize';\nimport { isSessionAvailable }         from 'Stores/Modules/Trading/Helpers/start_date';\n\nclass TimePickerDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n        this.minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n        this.state    = {\n            is_hour_selected  : false,\n            is_minute_selected: false,\n            last_updated_type : null,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { is_hour_selected, is_minute_selected } = this.state;\n        if (is_hour_selected && is_minute_selected) {\n            this.resetValues();\n            this.props.toggle();\n        }\n        if (!prevProps.className && this.props.className === 'active') {\n            this.resetValues();\n        }\n        if (prevState.last_updated_type !== this.state.last_updated_type && this.state.last_updated_type) {\n            this.setState({ last_updated_type: null });\n        }\n    }\n\n    resetValues() {\n        this.setState({\n            is_hour_selected  : false,\n            is_minute_selected: false,\n        });\n    }\n\n    selectOption = (type, value, is_enabled = true) => {\n        if (is_enabled) {\n            const [ prev_hour, prev_minute ] = this.props.value.split(':');\n            if ((type === 'h' && value !== prev_hour) || (type === 'm' && value !== prev_minute)) {\n                const is_type_selected = type === 'h' ? 'is_hour_selected' : 'is_minute_selected';\n                this.setState({\n                    last_updated_type : type,\n                    [is_type_selected]: true,\n                });\n                this.props.onChange(`${type === 'h' ? value : prev_hour}:${type === 'm' ? value : prev_minute}`);\n            }\n        }\n    };\n\n    clear = (event) => {\n        event.stopPropagation();\n        this.resetValues();\n        this.props.onChange('');\n    };\n\n    render() {\n        const { preClass, value, toggle, start_date, sessions } = this.props;\n        const start_moment       = moment(start_date * 1000 || undefined).utc();\n        const start_moment_clone = start_moment.clone().minute(0).second(0);\n        const [ hour, minute ]   = value.split(':');\n        return (\n            <div className={`${preClass}-dropdown ${this.props.className}`}>\n                <div\n                    className={`${preClass}-panel`}\n                    onClick={toggle}\n                >\n                    <span className={value ? '' : 'placeholder'}>{value || localize('Select time')}</span>\n                    {(!('is_clearable' in this.props) || this.props.is_clearable) &&\n                        <span\n                            className={`${preClass}-clear`}\n                            onClick={this.clear}\n                        />\n                    }\n                </div>\n                <div className={`${preClass}-selector`}>\n                    <div\n                        ref={this.saveHourRef}\n                        className={`${preClass}-hours`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                        <div className='list-container'>\n                            {this.hours.map((h, key) => {\n                                start_moment_clone.hour(h);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment, true);\n                                return (\n                                    <div\n                                        className={`list-item${hour === h ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('h', h, is_enabled); }}\n                                    >\n                                        {h}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div\n                        ref={this.saveMinuteRef}\n                        className={`${preClass}-minutes`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                        <div className='list-container'>\n                            {this.minutes.map((mm, key) => {\n                                start_moment_clone.hour(hour).minute(mm);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment);\n                                return (\n                                    <div\n                                        className={`list-item${minute === mm ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('m', mm, is_enabled); }}\n                                    >{mm}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TimePicker extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            value  : '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            is_nativepicker,\n            value,\n            name,\n            is_align_right,\n            placeholder,\n            start_date,\n            sessions,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={`${prefix_class}${this.props.padding ? ' padding' : ''}${this.state.is_open ? ' active' : ''}`}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                        />\n                        : (\n                            <React.Fragment>\n                                <input\n                                    ref={this.saveRef}\n                                    type='text'\n                                    readOnly\n                                    id={`${prefix_class}-input`}\n                                    className={`${prefix_class}-input ${this.state.is_open ? 'active' : ''}`}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <TimePickerDropdown\n                                    className={`${this.state.is_open ? 'active' : ''}${is_align_right ? ' from-right' : '' }`}\n                                    toggle={this.toggleDropDown}\n                                    onChange={this.handleChange}\n                                    preClass={prefix_class}\n                                    start_date={start_date}\n                                    value={value}\n                                    sessions={sessions}\n                                    is_clearable={this.props.is_clearable}\n                                />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    is_align_right : PropTypes.bool,\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.string,\n};\n\nTimePickerDropdown.propTypes = {\n    className   : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    onChange    : PropTypes.func,\n    preClass    : PropTypes.string,\n    sessions    : MobxPropTypes.arrayOrObservableArray,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    toggle     : PropTypes.func,\n    value      : PropTypes.string,\n    value_split: PropTypes.bool,\n};\n\nexport default observer(TimePicker);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <ToggleButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst ToggleButton = ({ style, toggled }) => {\n    const toggle_style = style || 'toggle-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nToggleButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default ToggleButton;\n","export * from './icon_logout.jsx';\n","import GTM              from '_common/base/gtm';\nimport * as SocketCache from '_common/base/socket_cache';\nimport Client           from '_common/base/client_base';\n\n/**\n * Switch to the given loginid account.\n *\n * @param loginid\n */\nexport const switchAccount = (loginid) => {\n    if (!loginid || !Client.get('token', loginid)) {\n        return;\n    }\n    sessionStorage.setItem('active_tab', '1');\n    // set local storage\n    GTM.setLoginFlag('account_switch');\n    Client.set('cashier_confirmed', 0);\n    Client.set('accepted_bch', 0);\n    Client.set('loginid', loginid);\n    SocketCache.clear();\n    window.location.reload();\n};\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst InkBar = ({ left, width }) => {\n    const inkbar_style = {\n        left,\n        width,\n    };\n\n    return (\n        <span style={inkbar_style} className='inkbar' />\n    );\n};\n\nInkBar.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { InkBar };\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport Client              from '_common/base/client_base';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !Client.isLoggedIn()) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.alignment === 'left') {\n            this.setState({ is_this_drawer_on: nextProps.is_main_drawer_on });\n        } else if (this.props.alignment === 'right'){\n            this.setState({ is_this_drawer_on: nextProps.is_notifications_drawer_on });\n        }\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date_picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n// document.addEventListener('DOMContentLoaded', initApp);\n// window.addEventListener('pageshow', (e) => { // Safari doesn't fire load event when using back button\n//     if (e.persisted) {\n//         initApp();\n//     }\n// });\n","var map = {\n\t\"./ja\": 218,\n\t\"./ja.js\": 218\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 488;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport OutdatedBrowser      from 'Services/outdated_browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import BinarySocket   from '_common/base/socket_base';\nimport {\n    cloneObject,\n    getPropertyValue,\n    isDeepEqual,\n    isEmptyObject }   from '_common/utility';\n\n/**\n * A layer over BinarySocket to handle subscribing to streaming calls\n * in order to keep track of subscriptions, manage forget, prevent multiple subscription at the same time, ...\n *\n * structure of the the subscription object is:\n * {\n *     1: { msg_type: 'proposal', request: { ... }, stream_id: '...', subscribers: [ ... ] },\n *     2: ...\n * }\n * object keys: subscription_id that assigned to each subscription\n * msg_type   : msg_type of the request for faster filtering\n * request    : the request object, used to subscribe to the same stream when there is a new subscribe request with exactly the same values\n * stream_id  : id of the stream which stored from its response and used to forget the stream when needed\n * subscribers: an array of callbacks to dispatch the response to\n */\nconst SubscriptionManager = (() => {\n    const subscriptions    = {};\n    const forget_requested = {};\n\n    let subscription_id = 0;\n\n    /**\n     * To submit request for a new subscription\n     *\n     * @param {String}   msg_type             msg_type of the request\n     * @param {Object}   request_obj          the whole object of the request to be made\n     * @param {Function} fncCallback          callback function to pass the responses to\n     * @param {Boolean}  should_forget_first  when it's true: forgets the previous subscription, then subscribes after receiving the forget response (if any)\n     */\n    const subscribe = (msg_type, request_obj, fncCallback, should_forget_first = false) => {\n        if (should_forget_first) {\n            forget(msg_type, fncCallback).then(() => {\n                subscribe(msg_type, request_obj, fncCallback);\n            });\n            return;\n        }\n\n        let sub_id = Object.keys(subscriptions).find(id => isDeepEqual(request_obj, subscriptions[id].request));\n\n        if (!sub_id) {\n            sub_id = ++subscription_id;\n\n            subscriptions[sub_id] = {\n                msg_type,\n                request    : cloneObject(request_obj),\n                stream_id  : '',             // stream_id will be updated after receiving the response\n                subscribers: [fncCallback],\n            };\n\n            BinarySocket.send(request_obj, {\n                callback: (response) => dispatch(response, sub_id),\n            });\n        } else if (!hasCallbackFunction(sub_id, fncCallback)) {\n            // there is already an active subscription for the very same request which fncCallback is not subscribed to it yet\n            subscriptions[sub_id].subscribers.push(fncCallback);\n        }\n    };\n\n    // dispatches the response to subscribers of the specific subscription id (internal use only)\n    const dispatch = (response, sub_id) => {\n        const stream_id = getPropertyValue(response, [response.msg_type, 'id']);\n\n        if (!subscriptions[sub_id]) {\n            if (!forget_requested[stream_id]) {\n                forgetStream(stream_id);\n            }\n            return;\n        }\n\n        const sub_info = subscriptions[sub_id];\n        // set the stream_id\n        if (!sub_info.stream_id && stream_id) {\n            sub_info.stream_id = stream_id;\n        }\n\n        // callback subscribers\n        const subscribers = sub_info.subscribers;\n        if (subscribers.length) {\n            if (\n                // it is the first response\n                !sub_info.stream_id &&\n                    (\n                        // the first response returned error\n                        response.error\n                        || (\n                            // not a subscription (i.e. subscribed proposal_open_contract for an expired contract)\n                            // also to filter out streams with no stream id but later it will continue streaming (i.e. proposal_open_contract without contract id)\n                            !isEmptyObject(response[response.msg_type]) &&\n                            // check msg_type to filter out those calls which don't return stream `id` on first response (tick_history, ...)\n                            response.msg_type === sub_info.msg_type\n                        )\n                    )\n                ||\n                // remove when response isn't first and response has no stream_id\n                !stream_id && sub_info.stream_id\n            ) {\n                delete subscriptions[sub_id];\n            }\n            sub_info.subscribers.forEach((fnc) => {\n                fnc(response);\n            });\n        } else {\n            delete subscriptions[sub_id];\n            forgetStream(sub_info.stream_id);\n        }\n    };\n\n    /**\n     * To forget a subscription which submitted for a specific callback function\n     *\n     * @param  {String}   msg_type      msg_type to forget\n     * @param  {Function} fncCallback   the same function passed to subscribe()\n     *     (this is the way to distinguish between different subscribers of the same stream at the same time)\n     * @param  {Object}   match_values  optional, to only forget subscriptions having request that \"contains\" provided values\n     * @return {Promise}  the promise object of all possible forget requests\n     */\n    const forget = (msg_type, fncCallback, match_values) => {\n        if (typeof fncCallback !== 'function') {\n            throw new Error(`Missing callback function. To forget all subscriptions of msg_type: ${msg_type}, please call forgetAll().`);\n        }\n\n        // find corresponding id(s)\n        const sub_ids = Object.keys(subscriptions).filter(id => (\n            subscriptions[id].msg_type === msg_type &&\n            hasCallbackFunction(id, fncCallback)\n        ));\n\n        const forgets_list = [];\n        sub_ids.forEach((id) => {\n            if (match_values && !hasValues(subscriptions[id].request, match_values)) {\n                return;\n            }\n            const stream_id = subscriptions[id].stream_id;\n            if (stream_id && subscriptions[id].subscribers.length === 1) {\n                delete subscriptions[id];\n                forgets_list.push(forgetStream(stream_id));\n            } else {\n                // there are other subscribers, or for some reason there is no stream_id:\n                // (i.e. returned an error, or forget() being called before the first response)\n                subscriptions[id].subscribers.splice(subscriptions[id].subscribers.indexOf(fncCallback), 1);\n            }\n        });\n        return Promise.all(forgets_list);\n    };\n\n    /**\n     * To forget all active subscriptions of a list of msg_types\n     *\n     * @param  {String}  msg_types  list of msg_types to forget\n     * @return {Promise} the promise object of all possible forget_all requests\n     */\n    const forgetAll = (...msg_types) => {\n        const types_to_forget = {};\n\n        msg_types.forEach((msg_type) => {\n            const sub_ids = Object.keys(subscriptions).filter(id => subscriptions[id].msg_type === msg_type);\n            if (sub_ids.length) {\n                sub_ids.forEach((id) => {\n                    delete subscriptions[id];\n                });\n                types_to_forget[msg_type] = true;\n            }\n        });\n\n        return Promise.resolve(\n            !isEmptyObject(types_to_forget) ?\n                BinarySocket.send({ forget_all: Object.keys(types_to_forget) }) :\n                {}\n        );\n    };\n\n    const forgetStream = (stream_id) => {\n        forget_requested[stream_id] = true; // to prevent forgetting multiple times\n        return Promise.resolve(\n            stream_id ?\n                BinarySocket.send({ forget: stream_id }).then(() => { delete forget_requested[stream_id]; }) :\n                {}\n        );\n    };\n\n    const hasCallbackFunction = (sub_id, fncCallback) =>\n        (subscriptions[sub_id] && subscriptions[sub_id].subscribers.indexOf(fncCallback) !== -1);\n\n    const hasValues = (request_obj, values_obj) => (\n        typeof request_obj === 'object' &&\n        typeof values_obj  === 'object' &&\n        Object.keys(values_obj).every(key => request_obj[key] === values_obj[key])\n    );\n\n    return {\n        subscribe,\n        forget,\n        forgetAll,\n    };\n})();\n\nexport default SubscriptionManager;\n","import { action, flow }     from 'mobx';\nimport Client               from '_common/base/client_base';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!Client.isValidLoginid()) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== Client.get('loginid')) {\n                        requestLogout();\n                    } else {\n                        Client.responseAuthorize(response);\n                        setBalance(response.authorize.balance);\n                        WS.subscribeBalance(ResponseHandlers.balance);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(response.authorize.country || Client.get('residence'));\n                        if (!Client.get('is_virtual')) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !Client.get('accepted_bch')) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    Client.set('email', response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            Client.set('residence', residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        Client.set('balance', balance);\n        client_store.balance = balance;\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action }   from 'mobx';\nimport { localize } from '_common/localize';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError(localize('Your web browser is out of date and may affect your trading experience. Proceed at your own risk.'));\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore();\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import { observable } from 'mobx';\nimport Client         from '_common/base/client_base';\nimport BaseStore      from './base_store';\n\nexport default class ClientStore extends BaseStore {\n    @observable balance;\n    @observable is_logged_in = !!Client.isLoggedIn();\n    @observable loginid      = Client.get('loginid');\n    @observable currency     = Client.get('currency') || '';\n    @observable upgrade_info = Client.getBasicUpgradeInfo();\n    @observable can_upgrade  = this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi;\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import {\n    action,\n    observable,\n}                          from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = ['ACH'];\n    const language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore();\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable,\n}                             from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport { WS }                 from 'Services';\nimport { localize }           from '_common/localize';\nimport { createChartBarrier } from './Helpers/chart_barriers';\nimport { createChartMarkers } from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo,\n}                             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract,\n}                             from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell,\n}                             from './Helpers/logic';\nimport BaseStore              from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    // TODO: don't localize on every call\n    return {\n        [localize('Contract Type')] : getContractTypeDisplay()[contract_type],\n        [localize('Start Time')]    : txt_start_time,\n        [localize('Entry Spot')]    : txt_entry_spot,\n        [localize('Purchase Price')]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    // TODO: don't localize on every call\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [localize('End Time')]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [localize('Exit Spot')]     : end_spot ? addComma(end_spot) : '-',\n            [localize('Exit Spot Time')]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [localize('Payout')]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const toMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nconst setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time.split(':');\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => moment(date || undefined, date_format).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = moment(date).utc().diff(moment().utc(), 'days');\n    return (!date || diff < 0) ? '' : diff + 1;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    onMount() {\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                      from 'mobx';\nimport moment                         from 'moment';\nimport Client                         from '_common/base/client_base';\nimport { WS }                         from 'Services';\nimport { formatStatementTransaction } from './Helpers/format_response';\nimport BaseStore                      from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @action.bound\n    clearTable() {\n        this.data            = [];\n        this.has_loaded_all  = false;\n        this.is_loading      = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to   && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            }\n        ).then(this.statementHandler);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const currency = Client.get('currency');\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction, currency));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    onMount() {\n        this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.clearTable();\n        this.clearDateFilter();\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    runInAction,\n    reaction,\n}                                     from 'mobx';\nimport Client                         from '_common/base/client_base';\nimport {\n    getMinPayout,\n    isCryptocurrency,\n}                                     from '_common/base/currency_base';\nimport BinarySocket                   from '_common/base/socket_base';\nimport { localize }                   from '_common/localize';\nimport { cloneObject, isEmptyObject } from '_common/utility';\nimport { WS }                         from 'Services';\nimport GTM                            from 'Utils/gtm';\nimport URLHelper                      from 'Utils/URL/url_helper';\nimport { processPurchase }            from './Actions/purchase';\nimport * as Symbol                    from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    non_proposal_query_string_variable,\n}                                     from './Constants/query_string';\nimport getValidationRules             from './Constants/validation_rules';\nimport { setChartBarrier }            from './Helpers/chart';\nimport ContractType                   from './Helpers/contract_type';\nimport { convertDurationLimit }       from './Helpers/duration';\nimport { processTradeParams }         from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName,\n}                                     from './Helpers/proposal';\nimport { pickDefaultSymbol }          from './Helpers/symbol';\nimport BaseStore                      from '../../base_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n    @observable currencies_list = {};\n    @observable currency        = Client.get('currency');\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '09:40';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = '12:30';\n    @observable sessions         = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n\n        if (Client.isLoggedIn) {\n            this.processNewValuesAsync({ currency: Client.get('currency') });\n        }\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        this.requestProposal();\n        e.preventDefault();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (is_changed_by_user && /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    proposal_requests = {};\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...non_proposal_query_string_variable,\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            WS.forgetAll('proposal').then(() => {\n                Object.keys(this.proposal_requests).forEach((type) => {\n                    WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n                });\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type = response.echo_req.contract_type;\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n    }\n\n    @action.bound\n    onUnmount() {\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        param_object.sort();\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${param_object.toString()}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, query_string);\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall  : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low   : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch      : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end        : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay       : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian      : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd   : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call    : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put     : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low: { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize } from '_common/localize';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom', { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend             from 'extend';\nimport Client             from '_common/base/client_base';\nimport { isEmptyObject }  from '_common/utility';\nimport ContractTypeHelper from './contract_type';\n\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Currency      from '../Actions/currency';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n\n    if (!Client.get('currency') && isEmptyObject(store.currencies_list)) {\n        extendOrReplace(snapshot, await Currency.getCurrenciesAsync(store.currency));\n    }\n\n    getMethodsList(store, new_state).forEach((fnc) => {\n        extendOrReplace(snapshot, fnc(snapshot));\n    });\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    Duration.onChangeExpiry,\n    StartDate.onChangeStartDate,\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import { WS }            from 'Services';\nimport {\n    buildCurrenciesList,\n    getDefaultCurrency } from '../Helpers/currency';\n\nexport const getCurrenciesAsync = async(currency) => {\n    const response = await WS.payoutCurrencies();\n\n    const currencies_list  = buildCurrenciesList(response.payout_currencies);\n    const default_currency = getDefaultCurrency(currencies_list, currency);\n\n    return {\n        currencies_list,\n        ...(default_currency),\n    };\n};\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = (store) => {\n    const { contract_type, start_date, duration_unit, expiry_time } = store;\n    let { start_time, expiry_date } = store;\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_date = ContractType.getExpiryDate(expiry_date, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    const obj_expiry_time = ContractType.getExpiryTime(sessions, start_date, start_time, expiry_date, expiry_time);\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n    };\n};\n","import moment                              from 'moment';\nimport { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport { convertToUnix }                   from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response) => {\n    const proposal = response.proposal || {};\n    const profit   = (proposal.payout - proposal.ask_price) || 0;\n    const returns  = profit * 100 / (proposal.ask_price || 1);\n\n    return {\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake    : proposal.display_value,\n        payout   : proposal.payout,\n        id       : proposal.id || '',\n        message  : proposal.longcode || response.error.message,\n        has_error: !!response.error,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = moment.utc(store.expiry_date);\n        const start_date  = moment.unix(store.start_date || (store.root_store.common.server_time / 1000)).utc();\n        const is_same_day = expiry_date.isSame(start_date, 'day');\n        const expiry_time = is_same_day ? store.expiry_time : '23:59:59';\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_portfolio_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    constructor() {\n        const local_storage_properties = [\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_portfolio_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('dark'));\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_portfolio_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePortfolioDrawer() { // show and hide Portfolio Drawer\n        this.is_portfolio_drawer_on = !this.is_portfolio_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        // TODO The value should be change to `True` whenever the design of showing installation prompt gets ready.\n        this.is_install_button_visible = false;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { isClientAllowedToVisit }  from 'App/Middlewares/is_client_allowed_to_visit';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PortfolioDrawer             from './Components/Elements/PortfolioDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast_message.jsx';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport ThemeWrapper                from './Containers/Layout/theme_wrapper.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Components/Elements/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <ThemeWrapper>\n                <div id='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PortfolioDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal is_visible={!isClientAllowedToVisit()} />\n                </ErrorBoundary>\n\n                <footer id='footer'>\n                    <Footer />\n                </footer>\n            </ThemeWrapper>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './portfolio_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport SimpleBar                      from 'simplebar-react';\nimport { localize }                   from '_common/localize';\nimport { IconClose }                  from 'Assets/Common';\nimport { connect }                    from 'Stores/connect';\nimport PortfolioDrawerCard            from './portfolio_drawer_card.jsx';\n\nconst EmptyPortfolioMessage = React.lazy(() => import(\n    /* webpackChunkName: \"portfolio.empty_message\" */'Modules/Portfolio/Components/empty_portfolio_message.jsx'\n));\n\nclass PortfolioDrawer extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_portfolio_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PortfolioDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <React.Suspense fallback={<div> Loading... </div>}>\n                <div className={classNames('portfolio-drawer', { 'portfolio-drawer--open': is_portfolio_drawer_on })}>\n                    <div className='portfolio-drawer__header'>\n                        <span className='portfolio-drawer__icon-main ic-portfolio' />\n                        <span className='portfolio-drawer__title'>{localize('Portfolio Quick Menu')}</span>\n                        <div\n                            className='portfolio-drawer__icon-close'\n                            onClick={toggleDrawer}\n                        >\n                            <IconClose />\n                        </div>\n                    </div>\n                    <div className='portfolio-drawer__body'>\n                        <SimpleBar style={{ height: '100%' }}>\n                            {body_content}\n                        </SimpleBar>\n                    </div>\n                </div>\n            </React.Suspense>\n        );\n    }\n}\n\nPortfolioDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_portfolio_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n        toggleDrawer          : ui.togglePortfolioDrawer,\n    })\n)(PortfolioDrawer);\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='arrow-path' d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='#D2D3DA' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#333' fillRule='nonzero' d='M3.6 8.5L7 12.2a.5.5 0 1 1-.8.6l-4-4.5a.5.5 0 0 1 0-.6l4-4.5a.5.5 0 0 1 .8.6L3.6 7.5h9.9a.5.5 0 1 1 0 1H3.6z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PortfolioDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink className='portfolio-drawer-card' to={getContractPath(id)}>\n        <React.Fragment>\n            <div className='portfolio-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`portfolio-drawer-card__indicative portfolio-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='portfolio-drawer-card__symbol'>{underlying}</span>\n            <span className='portfolio-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPortfolioDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PortfolioDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='8' width='10' height='1' rx='.5' />\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82l-2.137-1.71z' fillRule='nonzero' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' fillRule='nonzero' />\n                    </g>\n\n                );\n                break;\n            case 'call':\n                IconType = (\n                    <g fill='#2A3052'>\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82 3.812 8.11z' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' />\n                    </g>\n\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 6.75h-4v-1.5h4L4.5 4H6l1.5 2L6 8H4.5l1-1.25zM10.5 11.75h4v-1.5h-4l1-1.25H10l-1.5 2 1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M2.698 9.5H.218v-.537L1.36 7.762c.281-.32.422-.576.422-.764 0-.153-.033-.27-.1-.35-.067-.08-.163-.12-.29-.12a.362.362 0 0 0-.306.16.657.657 0 0 0-.117.4H.144A1.167 1.167 0 0 1 .762 6.05c.193-.104.41-.156.65-.156.383 0 .68.089.887.266.207.178.31.432.31.764 0 .14-.025.277-.077.41a1.793 1.793 0 0 1-.243.417 6.12 6.12 0 0 1-.531.584l-.46.53h1.4V9.5zM9.107 8.194h.47v.825h-.47V10h-1.07v-.98H6.252l-.064-.655 1.85-2.977v-.01h1.07v2.816zm-1.9 0h.83V6.772l-.066.108-.765 1.314zM15.205 5.894v.647h-.037c-.308 0-.56.074-.758.221a.933.933 0 0 0-.365.614.962.962 0 0 1 .703-.273c.308 0 .553.112.735.336.182.225.273.52.273.884 0 .226-.053.434-.16.623a1.141 1.141 0 0 1-.446.443c-.192.107-.404.16-.636.16-.253 0-.478-.058-.677-.172a1.183 1.183 0 0 1-.463-.492 1.62 1.62 0 0 1-.171-.738v-.33c0-.365.078-.695.235-.987.157-.292.381-.52.673-.687.291-.166.614-.249.97-.249h.124zm-.743 1.838a.47.47 0 0 0-.437.262v.246c0 .45.156.674.467.674.125 0 .23-.056.313-.168a.687.687 0 0 0 .126-.423.674.674 0 0 0-.128-.426.41.41 0 0 0-.34-.165z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 8.75H2v-1.5h3.5L4.5 6H6l1.5 2L6 10H4.5l1-1.25zM10.5 8.75H14v-1.5h-3.5l1-1.25H10L8.5 8l1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M2.041 9.5h-.825V6.873l-.81.237v-.625l1.56-.54h.075zM7.26 7.242h.505c.4 0 .6-.196.6-.587a.508.508 0 0 0-.143-.373c-.096-.096-.23-.145-.403-.145a.58.58 0 0 0-.37.124.378.378 0 0 0-.157.308h-1.07c0-.243.068-.46.203-.65.136-.191.323-.34.564-.446.24-.107.504-.16.792-.16.514 0 .918.117 1.212.352.294.234.441.557.441.968 0 .198-.06.386-.182.563a1.3 1.3 0 0 1-.532.43c.245.089.438.224.578.405.14.18.21.404.21.67 0 .414-.16.744-.477.991-.317.248-.734.371-1.25.371a2.05 2.05 0 0 1-.843-.172 1.32 1.32 0 0 1-.589-.48 1.246 1.246 0 0 1-.2-.696h1.076c0 .141.057.264.171.368a.605.605 0 0 0 .423.155.634.634 0 0 0 .45-.157.525.525 0 0 0 .168-.401c0-.233-.058-.398-.174-.495-.116-.098-.277-.146-.482-.146H7.26v-.797zM13.266 7.762l.217-1.817h2.078v.64h-1.409l-.08.706a.973.973 0 0 1 .23-.09c.096-.027.189-.04.28-.04.353 0 .625.105.814.314.19.209.285.502.285.88 0 .228-.051.434-.153.619a1.049 1.049 0 0 1-.428.426c-.184.1-.402.149-.652.149-.223 0-.432-.046-.628-.138a1.126 1.126 0 0 1-.459-.379.92.92 0 0 1-.163-.543h.825c.008.13.05.234.124.31a.395.395 0 0 0 .296.115c.277 0 .415-.205.415-.615 0-.38-.17-.569-.508-.569-.192 0-.335.062-.43.186l-.654-.154z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g transform='matrix(1 0 0 -1 0 16)' fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='#2A3052' fillRule='nonzero'>\n                        <path d='M9.839 9.87a.5.5 0 0 0 .707 0l2.019-2.019a.5.5 0 1 0-.707-.707l-1.666 1.665-3.794-3.793a.5.5 0 0 0-.707 0l-.454.454-.823-.824a.5.5 0 1 0-.707.708L4.884 6.53a.5.5 0 0 0 .707 0l.454-.454L9.839 9.87z' />\n                        <path d='M12.428 8.79a.5.5 0 1 0 1 0V6.667a.5.5 0 0 0-.5-.5h-2.12a.5.5 0 1 0 0 1h1.62v1.621zM3 11.7h10.5a.5.5 0 1 0 0-1H3a.5.5 0 1 0 0 1z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='stroke-white' d='M3 4h10.5' stroke='#2A3052' strokeLinecap='round' />\n                        <path d='M11.074 5.454a.5.5 0 0 0-.707-.708L5.924 9.191a.5.5 0 0 0 .041.744l.953.762-1.272 1.272a.5.5 0 0 0 .707.707l1.666-1.667a.5.5 0 0 0-.04-.744l-.953-.762 4.048-4.05z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M11.263 4.556l.034 3.944H10.282V6.26l-.676-.76H7.34v-.944z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='6.5' width='10' height='1' rx='.5' />\n                        <path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' fillRule='nonzero' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'put':\n                IconType = (\n                    <g fill='#2A3052'><path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g className='color2-fill' fill='none' fillRule='evenodd' stroke='none' strokeWidth='1'>\n            <g>\n                <path className='color1-stroke color2-fill color3-stroke' fill='none' stroke='#2A3052' d='M1.5 14.5h13a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1h-13a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1z' />\n                <path className='color1-stroke color3-stroke color4-fill portfolio-fix' stroke='#2A3052' d='M5.5 3v-.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V3' />\n                <path className='color1-stroke scale-fix' stroke='#2A3052' strokeLinecap='square' d='M0 8l4.047 2.248a2 2 0 0 0 .971.252h5.964a2 2 0 0 0 .971-.252L16 8' />\n                <path className='color1-stroke' stroke='#2A3052' strokeLinecap='round' d='M6.5 8.5h3' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container notice-msg'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<div> Loading... </div>} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <fieldset className='trade-types'>\n                    <ContractType />\n                </fieldset>\n                <TradeParams />\n                <div className='purchase-wrapper'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconArrow }         from 'Assets/Common';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open: false,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        }\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    }\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n                tabIndex='0'\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <IconArrow className='select-arrow' />\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                    />\n                </ContractTypeDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleSelect: PropTypes.func,\n    list        : MobxPropTypes.objectOrObservableObject,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={() => handleSelect(contract)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts   : MobxPropTypes.arrayOrObservableArray,\n    handleSelect: PropTypes.func,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    }, popconfirm_element)\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\n\nconst ContractInfo = ({\n    barrier_count,\n    contract_title,\n    contract_type,\n    currency,\n    proposal_info,\n}) => {\n    const icon_type = `${contract_type}${/^(call|put)$/i.test(contract_type) && barrier_count > 0 ? '_barrier' : ''}`.toLowerCase();\n\n    return (\n        <div className='box'>\n            <div className='left-column'>\n                <div className='type-wrapper'>\n                    <IconTradeType type={icon_type} className='type' />\n                </div>\n                <h4 className='trade-type'>{contract_title}</h4>\n            </div>\n            {(proposal_info.has_error || !proposal_info.id) ?\n                <div className={proposal_info.has_error ? 'error-info-wrapper' : ''}>\n                    <span>{proposal_info.message}</span>\n                </div>\n                :\n                <div className='purchase-info-wrapper'>\n                    <span className='purchase-tooltip'>\n                        <Tooltip alignment='left' icon='info' message={proposal_info.message} />\n                    </span>\n                    <div className='info-wrapper'>\n                        <div>{localize('Stake')}:</div>\n                        <div><Money amount={proposal_info.stake} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Payout')}:</div>\n                        <div><Money amount={proposal_info.payout} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Net Profit')}:</div>\n                        <div><Money amount={proposal_info.profit} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Return')}:</div>\n                        <div>{proposal_info.returns}</div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nContractInfo.propTypes = {\n    barrier_count : PropTypes.number,\n    contract_title: PropTypes.string,\n    contract_type : PropTypes.string,\n    currency      : PropTypes.string,\n    proposal_info : PropTypes.object,\n};\n\nexport default ContractInfo;\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-error'>\n            <div className='close-btn-container' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-result-wrapper'>\n        <div>\n            <strong>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='label'>{localize('Buy Price')}:</span>\n            <span className='buy-price'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Payout')}:</span>\n            <span className='payout'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-error-wrapper'>\n        <span className='info-text'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a href='javascript:;'><span className='info-text'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-lock-container'>\n        <div className='lock-container'>\n            <IconLock className='ic-lock' />\n        </div>\n        <h4>{localize('Purchase Locked')}</h4>\n        <Button\n            className='flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/duration.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\nimport StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport Client                   from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }          from '_common/base/currency_base';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const has_currency = Client.get('currency');\n    const amount_container_class = classNames('amount-container', {\n        'three-columns': !has_currency,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Invest Amount')}\n            icon='invest-amount'\n        >\n            <div className={amount_container_class}>\n                <Dropdown\n                    list={basis_list}\n                    value={basis}\n                    name='basis'\n                    onChange={onChange}\n                    is_nativepicker={is_nativepicker}\n                />\n                {!has_currency &&\n                    <Dropdown\n                        list={currencies_list}\n                        value={currency}\n                        name='currency'\n                        onChange={onChange}\n                        is_nativepicker={is_nativepicker}\n                    />\n                }\n                <InputField\n                    error_messages = {validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={has_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis            : PropTypes.string,\n    basis_list       : MobxPropTypes.arrayOrObservableArray,\n    currencies_list  : PropTypes.object,\n    currency         : PropTypes.string,\n    is_minimized     : PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Amount);\n","import { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport SimpleBar         from 'simplebar-react';\nimport { IconArrow }     from 'Assets/Common';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex,\n}  from './helpers';\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleVisibility   = this.handleVisibility.bind(this);\n        this.handleSelect       = this.handleSelect.bind(this);\n        this.setWrapperRef      = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.state = {\n            is_list_visible: false,\n            curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect(item) {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    onKeyPressed = (event) => {\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    setWrapperRef(node) {\n        this.wrapper_ref = node;\n    }\n\n    scrollToggle(state) {\n        this.is_open = state;\n        // Used to disable y-scroll on body - disabled in this component for now\n        // document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n            this.scrollToggle(this.state.is_list_visible);\n        }\n    }\n\n    handleVisibility() {\n        this.setState({ is_list_visible: !this.state.is_list_visible });\n        this.scrollToggle(!this.state.is_list_visible);\n    }\n\n    render() {\n        // TODO: Fix list not being populated in native picker dropdown before re-enabling\n        // if (this.props.is_nativepicker) {\n        //     return (\n        //         <NativeSelect\n        //             name={this.props.name}\n        //             value={this.props.value}\n        //             list={this.props.list}\n        //             onChange={this.props.onChange}\n        //         />\n        //     );\n        // }\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={`dropdown-container ${this.props.className ? this.props.className : ''} ${this.state.is_list_visible ? 'show' : ''}`}\n            >\n                <div\n                    className={`dropdown-display ${this.state.is_list_visible ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                    tabIndex='0'\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                <IconArrow className='select-arrow' />\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames='dropdown-list'\n                    unmountOnExit\n                >\n                    <div className='dropdown-list'>\n                        <div className='list-container'>\n                            <SimpleBar style={{ 'height': '100%' }}>\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list-label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </SimpleBar>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={`list-item ${ value === item.value ? 'selected' : ''} ${highlightedIdx === idx ? 'highlighted' : ''}`}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nconst NativeSelect = ({\n    name,\n    value,\n    list,\n    onChange,\n}) => (\n    <div className='select-wrapper'>\n        <select name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\n// ToDo: Refactor Drop-down.\n// It's now too risky to refactor Dropdown for 'list' and 'value' prop types.\nDropdown.propTypes = {\n    className      : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    list           : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    type    : PropTypes.string,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\n// ToDo: Refactor NativeSelect\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/input_field.jsx';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n    return (\n        <Fieldset\n            header={barrier_count > 1 ? localize('Barriers') : localize('Barrier')}\n            icon='barriers'\n        >\n            <InputField\n                type='number'\n                name='barrier_1'\n                value={barrier_1}\n                onChange={onChange}\n                error_messages = {validation_errors.barrier_1 || []}\n                is_float\n                is_signed\n            />\n\n            {barrier_count === 2 &&\n                <InputField\n                    type='number'\n                    name='barrier_2'\n                    value={barrier_2}\n                    onChange={onChange}\n                    error_messages = {validation_errors.barrier_2}\n                    is_float\n                    is_signed\n                />\n            }\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport moment                   from 'moment';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Datepicker               from 'App/Components/Form/DatePicker';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\nimport { convertDurationUnit }  from 'Stores/Modules/Trading/Helpers/duration';\n\n/* TODO:\n      1. disable days other than today and tomorrow if start date is forward starting\n*/\n\nconst expiry_list = [\n    { text: localize('Duration'), value: 'duration' },\n];\n\nlet now_date,\n    min_date_duration,\n    max_date_duration,\n    min_date_expiry,\n    min_day,\n    max_day,\n    start_date_time;\n\nconst Duration = ({\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    onChange,\n    is_minimized,\n    is_nativepicker,\n    server_time,\n    sessions,\n    start_date,\n    start_time,\n    validation_errors,\n}) => {\n    if (duration_min_max[contract_expiry_type]) {\n        const moment_now  = moment(server_time);\n        const new_min_day = convertDurationUnit(duration_min_max[contract_expiry_type].min, 's', 'd');\n        const new_max_day = convertDurationUnit(duration_min_max[contract_expiry_type].max, 's', 'd');\n        if (!now_date || moment_now.date() !== now_date.date() || (duration_unit === 'd' && (min_day !== new_min_day || max_day !== new_max_day))) {\n            if (duration_unit === 'd') {\n                min_day = new_min_day;\n                max_day = new_max_day;\n            }\n\n            const moment_today = moment_now.clone().startOf('day');\n\n            now_date          = moment_now.clone();\n            min_date_duration = moment_today.clone().add(min_day || 1, 'd');\n            max_date_duration = moment_today.clone().add(max_day || 365, 'd');\n            min_date_expiry   = moment_today.clone();\n        }\n    }\n\n    const moment_expiry = moment.utc(expiry_date);\n    const is_same_day   = moment_expiry.isSame(moment(start_date * 1000 || undefined).utc(), 'day');\n    if (is_same_day) {\n        const date_time = moment.utc(start_date * 1000 || undefined);\n        if (start_date) {\n            const [ hour, minute ] = start_time.split(':');\n            date_time.hour(hour).minute(minute).second(0).add(5, 'minutes');\n        }\n        // only update start time every five minutes, since time picker shows five minute durations\n        const moment_start_date_time = moment.unix(start_date_time);\n        if (!start_date_time || moment_start_date_time.isAfter(date_time) || moment_start_date_time.clone().add(5, 'minutes').isBefore(date_time) ||\n            (moment_start_date_time.minutes() !== date_time.minutes() && date_time.minutes() % 5 === 0)) {\n            start_date_time = date_time.unix();\n        }\n    }\n    if (is_minimized) {\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n    const datepicker_footer = min_day > 1 ?\n        localize('The minimum duration is [_1] days', [min_day]) :\n        localize('The minimum duration is [_1] day',  [min_day]);\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_same_day,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Trade Duration')}\n            icon='trade-duration'\n        >\n            <Dropdown\n                list={expiry_list}\n                value={expiry_type}\n                name='expiry_type'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n\n            {expiry_type === 'duration' ?\n                <React.Fragment>\n                    <div className='duration-container'>\n                        {duration_unit === 'd' && !is_nativepicker ?\n                            <Datepicker\n                                name='duration'\n                                min_date={min_date_duration}\n                                max_date={max_date_duration}\n                                mode='duration'\n                                onChange={onChange}\n                                value={duration || min_day}\n                                is_read_only\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                footer={datepicker_footer}\n                            /> :\n                            <InputField\n                                type='number'\n                                name='duration'\n                                value={duration}\n                                onChange={onChange}\n                                is_nativepicker={is_nativepicker}\n                                error_messages = {validation_errors.duration || []}\n                            />\n                        }\n                        <Dropdown\n                            list={duration_units_list}\n                            value={duration_unit}\n                            name='duration_unit'\n                            onChange={onChange}\n                            is_nativepicker={is_nativepicker}\n                        />\n                    </div>\n                </React.Fragment> :\n                <React.Fragment>\n                    <div className={endtime_container_class}>\n                        <Datepicker\n                            name='expiry_date'\n                            has_today_btn\n                            min_date={min_date_expiry}\n                            max_date={max_date_duration}\n                            start_date={start_date}\n                            onChange={onChange}\n                            value={expiry_date}\n                            is_read_only\n                            is_clearable={false}\n                            is_nativepicker={is_nativepicker}\n                        />\n                        {is_same_day &&\n                            <TimePicker\n                                onChange={onChange}\n                                is_align_right\n                                name='expiry_time'\n                                value={expiry_time}\n                                placeholder='12:00'\n                                start_date={start_date_time}\n                                sessions={sessions}\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                            />\n                        }\n                    </div>\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\n// ToDo: Refactor Duration.jsx and date_picker.jsx\nDuration.propTypes = {\n    contract_expiry_type: PropTypes.string,\n    duration            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time    : PropTypes.string,\n    expiry_type    : PropTypes.string,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    onChange       : PropTypes.func,\n    server_time    : PropTypes.object,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Duration);\n","import classNames      from 'classnames';\nimport moment          from 'moment';\nimport React           from 'react';\nimport { IconArrow }   from 'Assets/Common';\nimport {\n    formatDate,\n    daysFromTodayTo }  from 'Utils/Date';\nimport DatePickerInput from './date_picker_input.jsx';\nimport Calendar        from '../../Elements/Calendar';\n\nclass DatePicker extends React.PureComponent {\n    state = {\n        value                : '',\n        is_datepicker_visible: false,\n        is_close_btn_visible : false,\n    };\n\n    componentWillReceiveProps({ value, mode }) {\n        if (value === this.state.value) return;\n        this.updateDatePickerValue(value, mode);\n    }\n\n    componentWillMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState({ is_datepicker_visible: !this.state.is_datepicker_visible });\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (!('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_close_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_close_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!moment.utc(value).isValid) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value), 'duration');\n        } else {\n            this.updateDatePickerValue(value);\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        this.updateDatePickerValue(value, this.props.mode);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: '' }, this.updateStore);\n        this.calendar.resetCalendar();\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value, mode) => {\n        this.setState({ value }, this.updateStore);\n\n        // update Calendar\n        const { date_format, start_date } = this.props;\n        const new_date = (mode === 'duration') ? moment.utc().add(value, 'days').format(date_format) : value;\n        if (this.calendar && (moment.utc(new_date, date_format).isValid() || !new_date)) {\n            if (!new_date) {\n                const current_date = moment.utc(start_date).format(date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='datepicker-display'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker-native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker-native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                <div\n                    className='datepicker-display-wrapper'\n                    onMouseEnter={this.onMouseEnter}\n                    onMouseLeave={this.onMouseLeave}\n                >\n                    <DatePickerInput\n                        class_name='datepicker-display'\n                        mode={this.props.mode}\n                        name={this.props.name}\n                        placeholder={this.props.placeholder}\n                        onClick={this.handleVisibility}\n                        is_read_only={true}\n                        value={this.state.value}\n                    />\n                    <span\n                        className={classNames('picker-calendar-icon', {\n                            show: !this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.handleVisibility}\n                    />\n                    <span\n                        className={classNames('close-circle-icon', {\n                            show: this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.clearDatePickerInput}\n                    />\n                </div>\n                <div\n                    className={classNames('datepicker-calendar', {\n                        show: this.state.is_datepicker_visible,\n                    })}\n                >\n                    <Calendar\n                        ref={node => { this.calendar = node; }}\n                        onSelect={this.onSelectCalendar}\n                        {...this.props}\n                    >\n                        <DatePickerInput\n                            class_name='calendar-input'\n                            mode={this.props.mode}\n                            name={this.props.name}\n                            onChange={this.onChangeInput}\n                            placeholder={this.props.placeholder}\n                            is_read_only={'is_read_only' in this.props ? this.props.is_read_only : false}\n                            value={this.state.value}\n                        />\n                    </Calendar>\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...DatePickerInput.propTypes,\n    ...Calendar.propTypes,\n};\n\nexport default DatePicker;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nexport default function DatePickerInput(props) {\n    return (\n        <input\n            id={props.id}\n            name={props.name}\n            className={props.class_name}\n            readOnly={props.is_read_only}\n            placeholder={props.placeholder\n                || (props.mode === 'duration' ? localize('Select a duration') : localize('Select date'))}\n            onChange={props.onChange}\n            onClick={props.onClick}\n            value={props.value}\n        />\n    );\n}\n\nDatePickerInput.propTypes = {\n    class_name  : PropTypes.string,\n    id          : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    is_read_only: PropTypes.bool,\n    mode        : PropTypes.string,\n    name        : PropTypes.string,\n    onChange    : PropTypes.func,\n    onClick     : PropTypes.func,\n    placeholder : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number, // duration\n        PropTypes.string, // date\n    ]),\n};\n","export default from './calendar.jsx';\n","import moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\nimport CalendarPanel  from './calendar_panel.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date } = props;\n        const current_date = moment.utc(start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: '',           // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    // navigates to next or previous's month/year/decade/century\n    navigators = {\n        nextMonth      : () => { this.navigateTo(1,   'months', true); },\n        previousMonth  : () => { this.navigateTo(1,   'months', false); },\n        nextYear       : () => { this.navigateTo(1,   'years',  true); },\n        previousYear   : () => { this.navigateTo(1,   'years',  false); },\n        nextDecade     : () => { this.navigateTo(10,  'years',  true); },\n        previousDecade : () => { this.navigateTo(10,  'years',  false); },\n        nextCentury    : () => { this.navigateTo(100, 'years',  true); },\n        previousCentury: () => { this.navigateTo(100, 'years',  false); },\n    };\n\n    // selects a day, a month, a year, or a decade\n    panelSelectors = {\n        date  : (e, is_disabled) => { this.updateSelectedDate(e, is_disabled); },\n        month : (e) => { this.updateSelected(e, 'month'); },\n        year  : (e) => { this.updateSelected(e, 'year'); },\n        decade: (e) => { this.updateSelected(e, 'decade'); },\n    };\n\n    // sets Calendar active view\n    calendarViews = {\n        date  : () => { this.setState({ calendar_view: 'date'   }); },\n        month : () => { this.setState({ calendar_view: 'month'  }); },\n        year  : () => { this.setState({ calendar_view: 'year'   }); },\n        decade: () => { this.setState({ calendar_view: 'decade' }); },\n    };\n\n    navigateTo = (value, unit, is_add) => {\n        const { date_format, max_date, min_date } = this.props;\n\n        let new_date = moment.utc(this.state.calendar_date, date_format)[is_add ? 'add' : 'subtract'](value, unit).format(date_format);\n\n        if (unit === 'months' && this.isPeriodDisabled(new_date, 'month')) return;\n\n        if (unit === 'years'  && this.isPeriodDisabled(new_date, 'years')) {\n            new_date = is_add ? max_date : min_date;\n        }\n\n        this.setState({ calendar_date: moment.utc(new_date, date_format).format(date_format) }); // formatted date\n    };\n\n    updateSelectedDate = (e, is_disabled) => {\n        if (is_disabled) {\n            return;\n        }\n\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = moment.utc(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(moment.utc(min_date));\n        const is_after    = moment_date.isAfter(moment.utc(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = moment.utc(this.state.calendar_date, this.props.date_format)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = moment.utc(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = moment().utc().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = moment.utc(date).startOf(unit);\n        const end_of_period   = moment.utc(date).endOf(unit);\n        return end_of_period.isBefore(moment.utc(min_date))\n            || start_of_period.isAfter(moment.utc(max_date));\n    };\n\n    render() {\n        const { children, date_format, footer, has_today_btn, id, max_date, min_date, start_date } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div id={id} className='calendar' value={selected_date}>\n                { children }\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    onClick={this.navigators}\n                    onSelect={this.calendarViews}\n                    calendar_view={calendar_view}\n                />\n                <CalendarPanel\n                    calendar_date={calendar_date}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    max_date={max_date}\n                    min_date={min_date}\n                    start_date={start_date}\n                    onClick={this.panelSelectors}\n                    selected_date={selected_date}\n                    calendar_view={calendar_view}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    onClick={this.setToday}\n                    has_today_btn={has_today_btn}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : moment(0).utc().format('YYYY-MM-DD'),              // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : moment().utc().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    children       : PropTypes.object,\n    date_format    : PropTypes.string,\n    footer         : PropTypes.string,\n    has_today_btn  : PropTypes.bool,\n    id             : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    max_date       : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onSelect  : PropTypes.func,\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarFooter({ footer, has_today_btn, onClick }) {\n    return (\n        <div className='calendar-footer'>\n            { footer && <span className='calendar-footer-extra'>{footer}</span> }\n            { has_today_btn &&\n                <CalendarButton className='calendar-footer-btn'>\n                    <a role='button' onClick={onClick}>{localize('Today')}</a>\n                </CalendarButton>\n            }\n        </div>\n    );\n}\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n","import classNames     from 'classnames';\nimport moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarHeader({ calendar_date, isPeriodDisabled, onClick, onSelect, calendar_view }) {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = moment.utc(calendar_date);\n\n    return (\n        <div className='calendar-header'>\n            <CalendarButton\n                className={classNames('calendar-prev-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    (is_date_view || is_month_view) && onClick.previousYear())\n                    || (is_year_view   && onClick.previousDecade())\n                    || (is_decade_view && onClick.previousCentury()\n                    )\n                }\n            />\n            <CalendarButton\n                className={classNames('calendar-prev-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.previousMonth}\n            />\n\n            <div className='calendar-select'>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar-select-month-btn'\n                        is_hidden={!is_date_view}\n                        label={moment_date.format('MMM')}\n                        onClick={onSelect.month}\n                    />\n                }\n                <CalendarButton\n                    className='calendar-select-year-btn'\n                    onClick={() => ((is_date_view || is_month_view) ? onSelect.year() : onSelect.decade())}\n                >\n                    { (is_date_view || is_month_view) && moment_date.year() }\n                    { is_year_view   && `${moment_date.clone().subtract(1, 'years').year()}-${moment_date.clone().add(10, 'years').year()}`  }\n                    { is_decade_view && `${moment_date.clone().subtract(10, 'years').year()}-${moment_date.clone().add(109, 'years').year()}` }\n                </CalendarButton>\n            </div>\n\n            <CalendarButton\n                className={classNames('calendar-next-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.nextMonth}\n            />\n            <CalendarButton\n                className={classNames('calendar-next-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    ((is_date_view || is_month_view) && onClick.nextYear())\n                    || (is_year_view   && onClick.nextDecade())\n                    || (is_decade_view && onClick.nextCentury())\n                )}\n            />\n        </div>\n    );\n}\n\nCalendarHeader.propTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    onClick         : PropTypes.object,\n    onSelect        : PropTypes.object,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nexport default function CalendarPanel(props) {\n    const calendar_panel = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <div className='calendar-panel'>\n            { calendar_panel[props.calendar_view] }\n        </div>\n    );\n}\n\nCalendarPanel.propTypes = {\n    calendar_view: PropTypes.string,\n};\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { padLeft }        from '_common/string_util';\nimport CalendarPanelTypes from './types';\n\nconst getDays = ({ calendar_date, date_format, max_date, min_date, start_date, onClick, selected_date }) => {\n    const dates = [];\n    const days  = [];\n    const moment_today       = moment().utc().startOf('day');\n    const moment_cur_date    = moment.utc(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const first_day          = moment_month_start.day();\n    const last_day           = moment_month_end.day();\n    const moment_min_date    = moment.utc(min_date);\n    const moment_max_date    = moment.utc(max_date);\n    const moment_selected    = moment.utc(selected_date);\n\n    for (let i = first_day; i > 0; i--) {\n        dates.push(moment_month_start.clone().subtract(i, 'day').format(date_format));\n    }\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    for (let i = 1; i <= 6 - last_day; i++) {\n        dates.push(moment_month_end.clone().add(i, 'day').format(date_format));\n    }\n\n    const moment_start_date = moment.unix(start_date).utc().startOf('day');\n    dates.map((date) => {\n        const moment_date = moment.utc(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n        const is_disabled = moment_date.isBefore(moment_min_date) || moment_date.isAfter(moment_max_date) ||\n            // for forward starting accounts, only show same day as start date and the day after\n            (start_date && (moment_date.isBefore(moment_start_date) || moment_date.isAfter(moment_start_date.clone().add(1, 'day'))));\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar-date', {\n                    active  : is_active && !is_disabled,\n                    today   : is_today,\n                    disabled: is_disabled,\n                })}\n                onClick={(e) => { onClick.date(e, is_disabled); }}\n                data-date={date}\n            >\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nconst week_headers = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar-date-panel'>\n            {week_headers.map((item, idx) => (<span key={idx} className='calendar-date-header'>{item}</span>))}\n            {days}\n        </div>\n    );\n};\n\nCalendarDays.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { localize }       from '_common/localize';\nimport CalendarPanelTypes from './types';\n\nconst getMonthHeaders = () => ({\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n});\n\nexport const CalendarMonths = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const moment_date    = moment.utc(calendar_date);\n    const selected_month = moment.utc(selected_date).month();\n    const month_headers  = getMonthHeaders();\n\n    return (\n        <div className='calendar-month-panel'>\n            {Object.keys(month_headers).map((month, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-month', {\n                        active  : idx === selected_month,\n                        disabled: isPeriodDisabled(moment_date.month(month), 'month'),\n                    })}\n                    onClick={onClick.month}\n                    data-month={idx}\n                >\n                    {month_headers[month]}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarYears = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n    const current_year  = moment_date.year();\n    const years         = [];\n    for (let year = current_year - 1; year < current_year + 11; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar-year-panel'>\n            {years.map((year, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-year', {\n                        disabled: isPeriodDisabled(moment_date.year(year), 'year'),\n                        active  : year === selected_year,\n                    })}\n                    onClick={onClick.year}\n                    data-year={year}\n                >\n                    {year}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarDecades = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n\n    const decades = [];\n    let min_year  = moment_date.year() - 10;\n    for (let i = 0; i < 12; i++) {\n        const max_year = min_year + 9;\n        const range    = `${min_year}-${max_year}`;\n        decades.push(range);\n        min_year = max_year + 1;\n    }\n\n    return (\n        <div className='calendar-decade-panel'>\n            {decades.map((range, idx) => {\n                const [start_year, end_year] = range.split('-');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar-decade', {\n                            disabled: isPeriodDisabled(moment_date.year(start_year), 'year') && isPeriodDisabled(moment_date.year(end_year), 'year'),\n                            active  : start_year === selected_year,\n                        })}\n                        onClick={onClick.decade}\n                        data-decade={range}\n                    >\n                        {range}\n                    </span>\n                );\n            })}\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CalendarPanelTypes };\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Dropdown     from 'App/Components/Form/DropDown';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\n\nconst last_digit_numbers = [...Array(10).keys()].map(number => ({\n    text : number,\n    value: number,\n}));\n\nconst LastDigit = ({\n    is_minimized,\n    is_nativepicker,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Last Digit Prediction')}\n            icon='digits'\n        >\n            <Dropdown\n                list={last_digit_numbers}\n                value={+last_digit}\n                name='last_digit'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    last_digit     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\n\n/* TODO:\n    1. update sessions list when the selected one doesn’t have any enabled time\n*/\n\nconst StartDate = ({\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    sessions,\n    start_date,\n    start_dates_list,\n    start_time,\n}) => {\n    // Number(0) refers to 'now'\n    const is_today = start_date === Number(0);\n    let current_date_config = '';\n    if (!is_today) {\n        current_date_config = start_dates_list.find(o => o.value === +start_date) || {};\n    }\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized start-date'>\n                <span className='icon start-time' />\n                {is_today ? localize('Now') : `${current_date_config.text}\\n${start_time}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Start time')}\n            icon='start-time'\n        >\n            <Dropdown\n                name='start_date'\n                value={start_date}\n                list={start_dates_list}\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n            {!is_today &&\n                <React.Fragment>\n                    <TimePicker\n                        onChange={onChange}\n                        is_align_right\n                        name='start_time'\n                        value={start_time}\n                        placeholder='12:00'\n                        start_date={start_date}\n                        sessions={sessions}\n                        is_clearable={false}\n                        is_nativepicker={is_nativepicker}\n                    />\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nStartDate.propTypes = {\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    onChange       : PropTypes.func,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_dates_list: MobxPropTypes.arrayOrObservableArray,\n    start_time      : PropTypes.string,\n};\n\nexport default observer(StartDate);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-wrapper'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\n\nconst ErrorComponent = ({ type, message }) => (\n    <div className='error-container'>\n        <IconError type={type} />\n        <p>{message || localize('Sorry, an error occured while processing your request.')}</p>\n    </div>\n);\n\nErrorComponent.propTypes = {\n    message: PropTypes.string,\n    type   : PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import React from 'react';\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const wrapper   = replacers[pair_code];\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport CloseButton from './close_button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }        from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                <span className={`toast__body__icon--${data.type.toLowerCase()}`} />\n            </div>\n            <div className='toast__body__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__body__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({ children, is_portfolio_drawer_on }) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-portfolio-drawer': is_portfolio_drawer_on,\n        })}\n    >\n        {children}\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_portfolio_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePortfolio,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_logged_in,\n    is_portfolio_drawer_on,\n    is_language_dialog_visible,\n    is_settings_dialog_on,\n    network_status,\n    toggleSettingsDialog,\n    togglePortfolioDrawer,\n}) => (\n    <React.Fragment>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            {\n                is_logged_in &&\n                <TogglePortfolio\n                    is_portfolio_drawer_on={is_portfolio_drawer_on}\n                    togglePortfolioDrawer={togglePortfolioDrawer}\n                />\n            }\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_settings_visible={is_settings_dialog_on}\n                is_language_visible={is_language_dialog_visible}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePortfolioDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        network_status            : common.network_status,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_portfolio.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentWillMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconQuickPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 12'>\n        <path className='color1-fill color3-fill' fill='#2A3052' fillRule='evenodd' d='M1 0h14c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1H1a1 1 0 0 1-1-1V1c0-.6.4-1 1-1zm0 1v10h5V1H1zm6 0v10h8V1H7zm1.5 1.5a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconQuickPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuickPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames             from 'classnames';\nimport PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { IconQuickPortfolio } from 'Assets/Footer';\n\nconst TogglePortfolio = ({\n    is_portfolio_drawer_on,\n    togglePortfolioDrawer,\n}) => {\n    const toggle_portfolio_class = classNames('ic-portfolio', {\n        'active': is_portfolio_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_portfolio_class}\n            onClick={togglePortfolioDrawer}\n        >\n            <IconQuickPortfolio className='footer-icon' />\n        </a>\n    );\n};\n\nTogglePortfolio.propTypes = {\n    is_portfolio_drawer_on: PropTypes.bool,\n    togglePortfolioDrawer : PropTypes.func,\n};\n\nexport { TogglePortfolio };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { withRouter }           from 'react-router';\nimport { formatMoney }          from '_common/base/currency_base';\nimport { connect }              from 'Stores/connect';\nimport {\n    AccountInfo,\n    LoginButton,\n    InstallPWAButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    ToggleNotificationsDrawer } from '../../Components/Layout/Header';\nimport header_links             from '../../Constants/header_links';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-balance-container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                            </React.Fragment>\n                            :\n                            <LoginButton />\n                        }\n                    </div>\n                </div>\n                <ToggleNotificationsDrawer />\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool, // TODO: add dark theme handler\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func, // TODO: add click handler\n    pwa_prompt_event         : PropTypes.object,\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ ui, client }) => ({\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account_info.jsx';\nexport * from './install_pwa_button.jsx';\nexport * from './login_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { IconArrow }       from 'Assets/Common';\nimport Client              from '_common/base/client_base';\nimport { localize }        from '_common/localize';\nimport { AccountSwitcher } from '../../Elements/AccountSwitcher';\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    onClickUpgrade,\n    toggleDialog,\n}) => {\n    const is_demo       = (Client.get('is_virtual', loginid));\n    const account_title = Client.getAccountTitle(loginid);\n    const account_type  = !(is_demo) && currency ? account_title : localize('Demo');\n\n    return (\n        <div className='acc-balance'>\n            <div className='acc-switcher-container'>\n                <div className={classNames('acc-info', { 'show': is_dialog_on })} onClick={toggleDialog}>\n                    <p className='acc-balance-type'>{localize('[_1] Account', [(account_type || '')])}</p>\n                    <p className='acc-balance-id'>{loginid}</p>\n                    <IconArrow className='select-arrow' />\n                </div>\n                <CSSTransition\n                    in={is_dialog_on}\n                    timeout={400}\n                    classNames='acc-switcher-wrapper'\n                    unmountOnExit\n                >\n                    <div className='acc-switcher-wrapper'>\n                        <AccountSwitcher\n                            is_visible={is_dialog_on}\n                            toggle={toggleDialog}\n                            is_upgrade_enabled={is_upgrade_enabled}\n                            onClickUpgrade={onClickUpgrade}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n            { typeof balance !== 'undefined' &&\n                <p className='acc-balance-amount'>\n                    <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                    {balance}\n                </p>\n            }\n        </div>\n    );\n};\n\nAccountInfo.propTypes = {\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account_switcher.jsx';\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Client            from '_common/base/client_base';\nimport { localize }      from '_common/localize';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services';\nimport { switchAccount } from 'Services/Helpers/switch_account';\nimport { UpgradeButton } from './upgrade_button.jsx';\n\nconst getAccountInfo = (loginid) => {\n    const currency     = Client.get('currency', loginid);\n    const is_virtual   = Client.get('is_virtual', loginid);\n    const account_type = !is_virtual && currency ? currency : Client.getAccountTitle(loginid);\n\n    return {\n        loginid,\n        is_virtual,\n        icon : account_type.toLowerCase(), // TODO: display the icon\n        title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n    };\n};\n\nconst makeAccountsList = () => Client.getAllLoginids().map(loginid => (\n    loginid !== Client.get('loginid') &&\n    !Client.get('is_disabled', loginid) &&\n    Client.get('token', loginid) ?\n        getAccountInfo(loginid) :\n        undefined\n)).filter(account => account);\n\nclass AccountSwitcher extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            accounts_list: makeAccountsList(),\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    doSwitch(loginid) {\n        this.props.toggle();\n        switchAccount(loginid);\n    }\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    render() {\n        if (!Client.isLoggedIn()) return false;\n\n        return (\n            <div className='acc-switcher-list' ref={this.setWrapperRef}>\n                {(this.state.accounts_list.length > 0) &&\n                this.state.accounts_list.map((account) => (\n                    <React.Fragment key={account.loginid}>\n                        <div\n                            className={classNames('acc-switcher-account', account.icon)}\n                            onClick={() => this.doSwitch(account.loginid)}\n                        >\n                            <span className='acc-switcher-id'>{account.loginid}</span>\n                            <span className='acc-switcher-type'>{account.title}</span>\n                        </div>\n                    </React.Fragment>\n                ))}\n                {this.props.is_upgrade_enabled &&\n                <div className='acc-button'>\n                    <UpgradeButton onClick={this.props.onClickUpgrade} />\n                </div>\n                }\n                <div className='acc-logout' onClick={requestLogout}>\n                    <span className='acc-logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    is_upgrade_enabled: PropTypes.bool,\n    is_visible        : PropTypes.bool,\n    onClickUpgrade    : PropTypes.func,\n    toggle            : PropTypes.func,\n};\n\nexport { AccountSwitcher };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className='primary orange'\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport InkBarDiv      from '../../Elements/InkBar';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <InkBarDiv className='menu-links'>\n            {items.map((item, idx) => (\n                <BinaryLink key={idx} to={item.link_to}>\n                    <span title={item.text}>{item.icon}{item.text}</span>\n                </BinaryLink>\n            ))}\n        </InkBarDiv>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","export default from './inkbar_div.jsx';\nexport *       from './inkbar.jsx';\n","import classnames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { InkBar } from './inkbar.jsx';\n\nclass InkBarDiv extends React.Component {\n    constructor(props) {\n        super(props);\n        window.addEventListener('resize', this.updateInkbarPosition);\n        this.state = {\n            left : 0,\n            width: 0,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.node) return;\n        this.updateInkbarPosition(this.node.querySelector('a[class=\"active\"]'));\n    }\n\n    componentDidUpdate() {\n        const active_el = this.node.querySelector('a[class=\"active\"]');\n        if (active_el) {\n            this.updateInkbarPosition(active_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.clearInkBar(); // clear InkBar when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        window.removeEventListener('resize', this.updateInkbarPosition);\n        this.clearInkBar();\n    }\n\n    onClick = (e) => {\n        if (!e.target) return;\n        this.updateInkbarPosition(e.target.closest('a'));\n    };\n\n    clearInkBar = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateInkbarPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('has-inkbar', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: this.onClick,\n                        })\n                    ))\n                }\n                <InkBar left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nInkBarDiv.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n};\n\nexport default InkBarDiv;\n","import React              from 'react';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\nimport getRoutesConfig    from '../../Constants/routes_config';\n\nconst BinaryRoutes = () => (\n    <React.Suspense fallback={<div> Loading... </div>}>\n        {\n            getRoutesConfig().map((route, idx) => (\n                <RouteWithSubRoutes key={idx} {...route} />\n            ))\n        }\n    </React.Suspense>\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <ToggleButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Client            from '_common/base/client_base';\nimport { localize }      from '_common/localize';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\nimport {\n    DrawerItem,\n    DrawerToggle }       from '../../Components/Elements/Drawer';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_mobile,\n    is_portfolio_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePortfolioDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            { is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        { !!(Client.isLoggedIn() && is_mobile) &&\n            <div className='drawer-footer'>\n                <DrawerItem\n                    icon={<IconLogout className='drawer-icon' />}\n                    text={localize('Logout')}\n                    custom_action={() => {\n                        if (is_portfolio_drawer_on) {\n                            togglePortfolioDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                        }\n                        requestLogout();\n                    }}\n                />\n            </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePortfolioDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconBell }        from 'Assets/Header/NavBar';\nimport { DrawerItem }      from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <div className='no-notifications-container'>\n                    <div className='notification-message'>\n                        <div className='bell-icon'>\n                            <IconBell />\n                        </div>\n                        <div>\n                            <h4>{localize('No Notifications')}</h4>\n                            <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n                        </div>\n                    </div>\n                </div>\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    'list': PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconPortfolio,\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        icon   : <IconPortfolio className='ic-header__portfolio' />,\n        text   : localize('Portfolio'),\n        link_to: routes.portfolio,\n    },\n    {\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Statement'),\n        link_to: routes.statement,\n    },\n    // { icon: <IconCashier />,   text: localize('Cashier') },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst ThemeWrapper = ({ children, is_dark_theme }) => {\n    const theme_wrapper_class = classNames('theme-wrapper', {\n        dark : is_dark_theme,\n        light: !is_dark_theme,\n    });\n    return (\n        <div id='theme_wrapper' className={theme_wrapper_class}>\n            {children}\n        </div>\n    );\n};\n\nThemeWrapper.propTypes = {\n    children     : PropTypes.node,\n    is_dark_theme: PropTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_dark_theme: ui.is_dark_mode_on,\n    }),\n)(ThemeWrapper));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport { connect }                    from 'Stores/connect';\nimport ErrorComponent                 from '../../Components/Elements/Errors';\nimport BinaryRoutes                   from '../../Components/Routes';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes />;\n};\n\nRoutes.propTypes = {\n    error    : MobxPropTypes.objectOrObservableObject,\n    has_error: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ common }) => ({\n        error    : common.error,\n        has_error: common.has_error,\n    })\n)(Routes));\n","export default from './denial_of_service.jsx';\n","import React                from 'react';\nimport PropTypes            from 'prop-types';\nimport { getAccountOfType } from '_common/base/client_base';\nimport { localize }         from '_common/localize';\nimport URL                  from '_common/url';\nimport FullPageModal        from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport Localize             from 'App/Components/Elements/localize.jsx';\nimport { switchAccount }    from 'Services/Helpers/switch_account';\n\nconst onConfirm = () => {\n    switchAccount(getAccountOfType('virtual').loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    is_visible: PropTypes.bool,\n};\nexport default DenialOfServiceModal;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{children}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    body               : PropTypes.string,\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register_service_worker';\nexport { unregister } from './register_service_worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const swUrl = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(swUrl)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}